

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jul 25 18:04:20 2025


     1                           	processor	18p018a0
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0_4,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0_4,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	pa_nodes0,global,class=CODE,delta=2
    33                           	psect	pa_nodes0,global,class=CODE,delta=2
    34                           	dabs	1,0x5B,1,_HIRCTRM
    35                           	dabs	1,0x5A,1,_occupy3
    36                           	dabs	1,0x59,1,_AUXR
    37                           	dabs	1,0x55,1,_RAMP
    38                           	dabs	1,0x54,1,_CHARGE1
    39                           	dabs	1,0x53,1,_CHARGE0
    40                           	dabs	1,0x52,1,_PDCON1
    41                           	dabs	1,0x51,1,_CMPCR
    42                           	dabs	1,0x50,1,_OSCCON
    43                           	dabs	1,0x4F,1,_PWM0P
    44                           	dabs	1,0x4E,1,_T1LOAD
    45                           	dabs	1,0x4D,1,_T1
    46                           	dabs	1,0x4C,1,_T1CON
    47                           	dabs	1,0x4B,1,_T0CR
    48                           	dabs	1,0x4A,1,_PWM2P
    49                           	dabs	1,0x49,1,_PWM1P
    50                           	dabs	1,0x48,1,_PWMCON
    51                           	dabs	1,0x47,1,_occupy2
    52                           	dabs	1,0x46,1,_TRISB
    53                           	dabs	1,0x42,1,_occupy1
    54                           	dabs	1,0x41,1,_OPTION
    55                           	dabs	1,0x2CF,0,_POR
    56                           	dabs	1,0x59,1
    57                           	dabs	1,0x2CE,0,_BOR
    58                           	dabs	1,0x59,1
    59                           	dabs	1,0x2CA,0,_RCTRMEN
    60                           	dabs	1,0x59,1
    61                           	dabs	1,0x2C9,0,_PWM3CT
    62                           	dabs	1,0x59,1
    63                           	dabs	1,0x2C8,0,_PWMCT
    64                           	dabs	1,0x59,1
    65                           	dabs	1,0x2AF,0,_MODSEL
    66                           	dabs	1,0x55,1
    67                           	dabs	1,0x2AE,0,_SINK_SEL
    68                           	dabs	1,0x55,1
    69                           	dabs	1,0x2AA,0,_SLOP2
    70                           	dabs	1,0x55,1
    71                           	dabs	1,0x2A9,0,_SLOP1
    72                           	dabs	1,0x55,1
    73                           	dabs	1,0x2A8,0,_SLOP0
    74                           	dabs	1,0x55,1
    75                           	dabs	1,0x2A7,0,_CHARGEN
    76                           	dabs	1,0x54,1
    77                           	dabs	1,0x2A6,0,_TEMPEN
    78                           	dabs	1,0x54,1
    79                           	dabs	1,0x2A1,0,_S9
    80                           	dabs	1,0x54,1
    81                           	dabs	1,0x2A0,0,_S8
    82                           	dabs	1,0x54,1
    83                           	dabs	1,0x29F,0,_S7
    84                           	dabs	1,0x53,1
    85                           	dabs	1,0x29E,0,_S6
    86                           	dabs	1,0x53,1
    87                           	dabs	1,0x29D,0,_S5
    88                           	dabs	1,0x53,1
    89                           	dabs	1,0x29C,0,_S4
    90                           	dabs	1,0x53,1
    91                           	dabs	1,0x29B,0,_S3
    92                           	dabs	1,0x53,1
    93                           	dabs	1,0x29A,0,_S2
    94                           	dabs	1,0x53,1
    95                           	dabs	1,0x299,0,_S1
    96                           	dabs	1,0x53,1
    97                           	dabs	1,0x298,0,_S0
    98                           	dabs	1,0x53,1
    99                           	dabs	1,0x297,0,_PDB7
   100                           	dabs	1,0x52,1
   101                           	dabs	1,0x296,0,_PDB6
   102                           	dabs	1,0x52,1
   103                           	dabs	1,0x295,0,_PDB5
   104                           	dabs	1,0x52,1
   105                           	dabs	1,0x294,0,_PDB4
   106                           	dabs	1,0x52,1
   107                           	dabs	1,0x293,0,_PDB3
   108                           	dabs	1,0x52,1
   109                           	dabs	1,0x28C,0,_LVDM
   110                           	dabs	1,0x51,1
   111                           	dabs	1,0x28B,0,_CMPWK
   112                           	dabs	1,0x51,1
   113                           	dabs	1,0x28A,0,_CMPIE
   114                           	dabs	1,0x51,1
   115                           	dabs	1,0x289,0,_CMPIES
   116                           	dabs	1,0x51,1
   117                           	dabs	1,0x288,0,_CPPIS
   118                           	dabs	1,0x51,1
   119                           	dabs	1,0x287,0,_T0OSCEN
   120                           	dabs	1,0x50,1
   121                           	dabs	1,0x281,0,_HXEN
   122                           	dabs	1,0x50,1
   123                           	dabs	1,0x280,0,_SCS
   124                           	dabs	1,0x50,1
   125                           	dabs	1,0x267,0,_T1EN
   126                           	dabs	1,0x4C,1
   127                           	dabs	1,0x266,0,_PWM0E
   128                           	dabs	1,0x4C,1
   129                           	dabs	1,0x265,0,_BUZ
   130                           	dabs	1,0x4C,1
   131                           	dabs	1,0x264,0,_T1CK1
   132                           	dabs	1,0x4C,1
   133                           	dabs	1,0x263,0,_T1CK0
   134                           	dabs	1,0x4C,1
   135                           	dabs	1,0x262,0,_T1PR2
   136                           	dabs	1,0x4C,1
   137                           	dabs	1,0x261,0,_T1PR1
   138                           	dabs	1,0x4C,1
   139                           	dabs	1,0x260,0,_T1PR0
   140                           	dabs	1,0x4C,1
   141                           	dabs	1,0x25F,0,_T0CK
   142                           	dabs	1,0x4B,1
   143                           	dabs	1,0x259,0,_T1IE
   144                           	dabs	1,0x4B,1
   145                           	dabs	1,0x258,0,_T1IF
   146                           	dabs	1,0x4B,1
   147                           	dabs	1,0x247,0,_PWM0OE
   148                           	dabs	1,0x48,1
   149                           	dabs	1,0x246,0,_PWM1OE
   150                           	dabs	1,0x48,1
   151                           	dabs	1,0x245,0,_PWM2OE
   152                           	dabs	1,0x48,1
   153                           	dabs	1,0x244,0,_PWMCK
   154                           	dabs	1,0x48,1
   155                           	dabs	1,0x243,0,_PWMMD
   156                           	dabs	1,0x48,1
   157                           	dabs	1,0x242,0,_PWMINV
   158                           	dabs	1,0x48,1
   159                           	dabs	1,0x241,0,_PWM1E
   160                           	dabs	1,0x48,1
   161                           	dabs	1,0x240,0,_PWM2E
   162                           	dabs	1,0x48,1
   163                           	dabs	1,0x237,0,_TRISB7
   164                           	dabs	1,0x46,1
   165                           	dabs	1,0x236,0,_TRISB6
   166                           	dabs	1,0x46,1
   167                           	dabs	1,0x235,0,_TRISB5
   168                           	dabs	1,0x46,1
   169                           	dabs	1,0x234,0,_TRISB4
   170                           	dabs	1,0x46,1
   171                           	dabs	1,0x233,0,_TRISB3
   172                           	dabs	1,0x46,1
   173                           	dabs	1,0x232,0,_TRISB2
   174                           	dabs	1,0x46,1
   175                           	dabs	1,0x231,0,_TRISB1
   176                           	dabs	1,0x46,1
   177                           	dabs	1,0x230,0,_TRISB0
   178                           	dabs	1,0x46,1
   179                           	dabs	1,0x20E,0,_INTEDG
   180                           	dabs	1,0x41,1
   181                           	dabs	1,0x20D,0,_T0CS
   182                           	dabs	1,0x41,1
   183                           	dabs	1,0x20C,0,_T0SE
   184                           	dabs	1,0x41,1
   185                           	dabs	1,0x20B,0,_PSA
   186                           	dabs	1,0x41,1
   187                           	dabs	1,0x20A,0,_PS2
   188                           	dabs	1,0x41,1
   189                           	dabs	1,0x209,0,_PS1
   190                           	dabs	1,0x41,1
   191                           	dabs	1,0x208,0,_PS0
   192                           	dabs	1,0x41,1
   193                           	dabs	1,0x10,1,_itemp
   194                           	dabs	1,0x6E,2
   195  0017                     
   196                           	psect	text0
   197  0000                     __ptext0:	
   198                           ; Version 1.45
   199                           ; Generated 16/11/2017 GMT
   200                           ; 
   201                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   202                           ; All rights reserved.
   203                           ; 
   204                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   205                           ; 
   206                           ; Redistribution and use in source and binary forms, with or without modification, are
   207                           ; permitted provided that the following conditions are met:
   208                           ; 
   209                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   210                           ;        conditions and the following disclaimer.
   211                           ; 
   212                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   213                           ;        of conditions and the following disclaimer in the documentation and/or other
   214                           ;        materials provided with the distribution.
   215                           ; 
   216                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   217                           ;        software without specific prior written permission.
   218                           ; 
   219                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   220                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   221                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   222                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   223                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   224                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   225                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   226                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   227                           ; 
   228                           ; 
   229                           ; Code-generator required, PIC16F887 Definitions
   230                           ; 
   231                           ; SFR Addresses
   232                           	;_PS0
   233  000F                     _INTFLAG	set	15
   234  000E                     _INTECON	set	14
   235  000D                     _PHCON	set	13
   236  000C                     _ODCON	set	12
   237  000B                     _PDCON	set	11
   238  0009                     _IOCB	set	9
   239  0008                     _PCON	set	8
   240  0006                     _PORTB	set	6
   241  0001                     _T0	set	1
   242  007C                     _TMPF	set	124
   243  0079                     _PBIF	set	121
   244  0078                     _T0IF	set	120
   245  0077                     _GIE	set	119
   246  0071                     _PBIE	set	113
   247  0070                     _T0IE	set	112
   248  0047                     _WDTEN	set	71
   249  0045                     _CMPOF	set	69
   250  0040                     _CMPEN	set	64
   251  0035                     _PORTB5	set	53
   252  0034                     _PORTB4	set	52
   253  0033                     _PORTB3	set	51
   254  0032                     _PORTB2	set	50
   255  0031                     _PORTB1	set	49
   256  0030                     _PORTB0	set	48
   257                           
   258                           	psect	cinit
   259  0018                     start_initialization:	
   260  0018                     __initialization:	
   261                           ; #config settings
   262                           
   263  0018                     end_of_initialization:	
   264  0018                     __end_of__initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  0018  0183               	clrf	3
   268  0019  2940               	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssBANK0_4
   271  0028                     __pbssBANK0_4:	
   272  0028                     _BITS_DATA0:	
   273  0028                     	ds	1
   274                           
   275                           	psect	bssBANK0
   276  0011                     __pbssBANK0:	
   277  0011                     _motoTiming:	
   278  0011                     	ds	4
   279  0015                     _lampTiming:	
   280  0015                     	ds	4
   281  0019                     _longpress_cnt:	
   282  0019                     	ds	2
   283  001B                     _SleepCount:	
   284  001B                     	ds	2
   285  001D                     _holdOn_f:	
   286  001D                     	ds	1
   287  001E                     _long_f:	
   288  001E                     	ds	1
   289  001F                     _clink_event:	
   290  001F                     	ds	1
   291  0020                     _g_ucTimerWorkCount:	
   292  0020                     	ds	1
   293  0021                     _g_ucTimer10msCount:	
   294  0021                     	ds	1
   295                           
   296                           	psect	cstackCOMMON
   297  0000                     __pcstackCOMMON:	
   298  0000                     ??_PowOn:	
   299  0000                     ??_MotoSwitch:	
   300  0000                     ??_LedSwitch:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0000                     ??_PowOff:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0000                     ??_LedOn:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0000                     ??_LedOff:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0000                     ??_delay_ms:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0000                     ??_CheckSleep:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0000                     ??_InitPort:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0000                     ??_InitSystem:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0000                     ??_InitRam:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0000                     ??_ScanKey:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0000                     ??_LedDisplay:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0000                     ??_MotoOn:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0000                     ??_MotoOff:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0000                     ??_MotoDisplay:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0000                     ??_bt_off:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0000                     ??_CountdownDisplay:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0000                     ??_main:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           	psect	cstackBANK0_4
   353  0022                     __pcstackBANK0_4:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0022                     ?_InitPort:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0022                     ?_InitSystem:	
   360  0022                     ?_InitRam:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0022                     ?_interrupt_handle:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0022                     ??_interrupt_handle:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0022                     ?_ScanKey:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0022                     ?_LedDisplay:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0022                     ?_MotoOn:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0022                     ?_MotoOff:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0022                     ?_MotoDisplay:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0022                     ?_bt_off:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0022                     ?_CountdownDisplay:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0022                     ?_main:	
   391                           ; 1 bytes @ 0x0
   392                           
   393                           
   394                           ; 1 bytes @ 0x0
   395                           ; 1 bytes @ 0x0
   396  0022                     	ds	2
   397  0024                     ?_delay_ms:	
   398  0024                     delay_ms@xms:	
   399                           
   400                           ; 1 bytes @ 0x2
   401                           ; 2 bytes @ 0x2
   402  0024                     	ds	2
   403  0026                     delay_ms@i:	
   404                           
   405                           ; 2 bytes @ 0x4
   406  0026                     	ds	2
   407                           
   408                           	psect	cstackBANK0
   409  0000                     __pcstackBANK0:	
   410  0000                     ?_PowOn:	
   411  0000                     ?_MotoSwitch:	
   412  0000                     ?_LedSwitch:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0000                     ?_PowOff:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0000                     ?_LedOn:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0000                     ?_LedOff:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0000                     ?_CheckSleep:	
   425                           ; 1 bytes @ 0x0
   426                           
   427                           
   428                           	psect	maintext
   429  0140                     __pmaintext:	
   430                           ; 1 bytes @ 0x0
   431                           
   432  0140                     _main:	
   433                           ; 1 bytes @ 0x0
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 48 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : B00/0
   450 ;;		On exit  : 100/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON BANK0_4   BANK0
   453 ;;      Params:         0       0       0
   454 ;;      Locals:         0       0       0
   455 ;;      Temps:          0       0       0
   456 ;;      Totals:         0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels required when called:    4
   459 ;; This function calls:
   460 ;;		_CheckSleep
   461 ;;		_CountdownDisplay
   462 ;;		_InitPort
   463 ;;		_InitRam
   464 ;;		_InitSystem
   465 ;;		_LedDisplay
   466 ;;		_MotoDisplay
   467 ;;		_ScanKey
   468 ;;		_delay_ms
   469 ;; This function is called by:
   470 ;;		Startup code after reset
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           ;psect for function _main
   474                           
   475                           
   476                           ;main.c: 50: InitPort();
   477                           ;incstack = 0
   478                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   479  0140  2106               	fcall	_InitPort
   480                           
   481                           ;main.c: 51: InitSystem();
   482  0141  2182               	fcall	_InitSystem
   483                           
   484                           ;main.c: 52: InitRam();
   485  0142  2196               	fcall	_InitRam
   486                           
   487                           ;main.c: 53: T0IE = 1;
   488  0143  140E               	bsf	14,0	;volatile
   489                           
   490                           ;main.c: 54: GIE = 1;
   491  0144  178E               	bsf	14,7	;volatile
   492  0145  0064               	clrwdt	; ;# 
   493                           
   494                           ;main.c: 76: delay_ms(500);
   495  0146  30F4               	movlw	244
   496  0147  1283               	bcf	3,5	;RP0=0, select bank0
   497  0148  00A4               	movwf	delay_ms@xms
   498  0149  3001               	movlw	1
   499  014A  00A5               	movwf	delay_ms@xms+1
   500  014B  2124               	fcall	_delay_ms
   501  014C                     l2901:	
   502                           
   503                           ;main.c: 77: while (1)
   504  014C  0064               	clrwdt	; ;# 
   505                           
   506                           ;main.c: 85: if ((BITS_DATA0.bit0))
   507  014D  1283               	bcf	3,5	;RP0=0, select bank0
   508  014E  1C28               	btfss	_BITS_DATA0,0
   509  014F  2954               	goto	l5063
   510                           
   511                           ;main.c: 86: {
   512                           ;main.c: 87: (BITS_DATA0.bit0) = 0;
   513  0150  1028               	bcf	_BITS_DATA0,0
   514                           
   515                           ;main.c: 89: ScanKey();
   516  0151  201A               	fcall	_ScanKey
   517                           
   518                           ;main.c: 90: CountdownDisplay();
   519  0152  20C8               	fcall	_CountdownDisplay
   520                           
   521                           ;main.c: 91: CheckSleep();
   522  0153  2083               	fcall	_CheckSleep
   523  0154                     l5063:	
   524                           
   525                           ;main.c: 92: }
   526                           ;main.c: 94: LedDisplay();
   527  0154  21A5               	fcall	_LedDisplay
   528                           
   529                           ;main.c: 95: MotoDisplay();
   530  0155  21A1               	fcall	_MotoDisplay
   531  0156  294C               	goto	l2901
   532  0157                     __end_of_main:	
   533                           
   534                           	psect	text1
   535  001A                     __ptext1:	
   536  001A                     _ScanKey:	
   537 ;; *************** function _ScanKey *****************
   538 ;; Defined at:
   539 ;;		line 11 in file "key.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 100/0
   550 ;;		On exit  : 100/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON BANK0_4   BANK0
   553 ;;      Params:         0       0       0
   554 ;;      Locals:         0       0       0
   555 ;;      Temps:          0       0       0
   556 ;;      Totals:         0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    2
   560 ;; This function calls:
   561 ;;		_LedSwitch
   562 ;;		_MotoSwitch
   563 ;;		_PowOff
   564 ;;		_PowOn
   565 ;; This function is called by:
   566 ;;		_main
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           ;psect for function _ScanKey
   570                           
   571                           
   572                           ;key.c: 14: if(PORTB2 == 0 || PORTB4 == 0 || PORTB5 == 1 )
   573                           ;incstack = 0
   574                           ; Regs used in _ScanKey: [wreg+status,2+status,0+pclath+cstack]
   575  001A  1906               	btfsc	6,2	;volatile
   576  001B  1E06               	btfss	6,4	;volatile
   577  001C  281F               	goto	l1764
   578  001D  1E86               	btfss	6,5	;volatile
   579  001E  2854               	goto	l4985
   580  001F                     l1764:	
   581                           
   582                           ;key.c: 15: {
   583                           ;key.c: 17: lampTiming = 0;
   584  001F  0195               	clrf	_lampTiming
   585  0020  0196               	clrf	_lampTiming+1
   586  0021  0197               	clrf	_lampTiming+2
   587  0022  0198               	clrf	_lampTiming+3
   588                           
   589                           ;key.c: 18: motoTiming = 0;
   590  0023  0191               	clrf	_motoTiming
   591  0024  0192               	clrf	_motoTiming+1
   592  0025  0193               	clrf	_motoTiming+2
   593  0026  0194               	clrf	_motoTiming+3
   594                           
   595                           ;key.c: 20: if(longpress_cnt < 0xffff) {
   596  0027  0F19               	incfsz	_longpress_cnt,w
   597  0028  282C               	goto	l4959
   598  0029  0A1A               	incf	_longpress_cnt+1,w
   599  002A  1903               	btfsc	3,2
   600  002B  2831               	goto	l4963
   601  002C                     l4959:	
   602                           
   603                           ;key.c: 21: longpress_cnt++;
   604  002C  0A99               	incf	_longpress_cnt,f
   605  002D  1903               	btfsc	3,2
   606  002E  0A9A               	incf	_longpress_cnt+1,f
   607                           
   608                           ;key.c: 23: SleepCount = 0;
   609  002F  019B               	clrf	_SleepCount
   610  0030  019C               	clrf	_SleepCount+1
   611  0031                     l4963:	
   612                           
   613                           ;key.c: 24: }
   614                           ;key.c: 26: if(longpress_cnt < 80){
   615  0031  3000               	movlw	0
   616  0032  021A               	subwf	_longpress_cnt+1,w
   617  0033  3050               	movlw	80
   618  0034  1903               	btfsc	3,2
   619  0035  0219               	subwf	_longpress_cnt,w
   620  0036  1803               	btfsc	3,0
   621  0037  2845               	goto	l1766
   622                           
   623                           ;key.c: 29: if(PORTB2 == 0) {
   624  0038  1906               	btfsc	6,2	;volatile
   625  0039  283D               	goto	l1767
   626                           
   627                           ;key.c: 31: clink_event = 1;
   628  003A  019F               	clrf	_clink_event
   629  003B  0A9F               	incf	_clink_event,f
   630                           
   631                           ;key.c: 33: } else if(PORTB4 == 0) {
   632  003C  2845               	goto	l1766
   633  003D                     l1767:	
   634  003D  1A06               	btfsc	6,4	;volatile
   635  003E  2841               	goto	l1769
   636                           
   637                           ;key.c: 35: clink_event = 2;
   638  003F  3002               	movlw	2
   639  0040  2844               	goto	L1
   640  0041                     l1769:	
   641                           
   642                           ;key.c: 37: } else if(PORTB5 == 1) {
   643  0041  1E86               	btfss	6,5	;volatile
   644  0042  2845               	goto	l1766
   645                           
   646                           ;key.c: 39: clink_event = 3;
   647  0043  3003               	movlw	3
   648  0044                     L1:	
   649  0044  009F               	movwf	_clink_event
   650  0045                     l1766:	
   651                           
   652                           ;key.c: 41: }
   653                           ;key.c: 44: }
   654                           ;key.c: 46: if(longpress_cnt >= 100){
   655  0045  3000               	movlw	0
   656  0046  021A               	subwf	_longpress_cnt+1,w
   657  0047  3064               	movlw	100
   658  0048  1903               	btfsc	3,2
   659  0049  0219               	subwf	_longpress_cnt,w
   660  004A  1C03               	btfss	3,0
   661  004B  0008               	return
   662                           
   663                           ;key.c: 48: clink_event = 0;
   664  004C  019F               	clrf	_clink_event
   665                           
   666                           ;key.c: 50: if(PORTB5 == 1){
   667  004D  1E86               	btfss	6,5	;volatile
   668  004E  0008               	return
   669                           
   670                           ;key.c: 51: long_f = 1;
   671  004F  019E               	clrf	_long_f
   672  0050  0A9E               	incf	_long_f,f
   673                           
   674                           ;key.c: 53: if(g_ucTimerWorkCount < 0xff) {
   675  0051  0F20               	incfsz	_g_ucTimerWorkCount,w
   676                           
   677                           ;key.c: 54: g_ucTimerWorkCount++;
   678  0052  0AA0               	incf	_g_ucTimerWorkCount,f
   679                           
   680                           ;key.c: 55: }
   681                           ;key.c: 56: PowOn();
   682  0053  299C               	ljmp	l4701
   683  0054                     l4985:	
   684                           
   685                           ;key.c: 64: longpress_cnt = 0;
   686  0054  0199               	clrf	_longpress_cnt
   687  0055  019A               	clrf	_longpress_cnt+1
   688                           
   689                           ;key.c: 66: if(clink_event == 1){
   690  0056  0B1F               	decfsz	_clink_event,w
   691  0057  285B               	goto	l4993
   692                           
   693                           ;key.c: 68: clink_event = 0;
   694  0058  019F               	clrf	_clink_event
   695                           
   696                           ;key.c: 71: MotoSwitch();
   697  0059  216E               	fcall	_MotoSwitch
   698                           
   699                           ;key.c: 72: } else if(clink_event == 2){
   700  005A  286B               	goto	l5009
   701  005B                     l4993:	
   702  005B  3002               	movlw	2
   703  005C  061F               	xorwf	_clink_event,w
   704  005D  1D03               	btfss	3,2
   705  005E  2862               	goto	l4999
   706                           
   707                           ;key.c: 73: clink_event = 0;
   708  005F  019F               	clrf	_clink_event
   709                           
   710                           ;key.c: 76: LedSwitch();
   711  0060  2178               	fcall	_LedSwitch
   712                           
   713                           ;key.c: 78: } else if(clink_event == 3){
   714  0061  286B               	goto	l5009
   715  0062                     l4999:	
   716  0062  3003               	movlw	3
   717  0063  061F               	xorwf	_clink_event,w
   718  0064  1D03               	btfss	3,2
   719  0065  286B               	goto	l5009
   720                           
   721                           ;key.c: 80: clink_event = 0;
   722  0066  019F               	clrf	_clink_event
   723                           
   724                           ;key.c: 82: PowOn();
   725  0067  219C               	fcall	_PowOn
   726                           
   727                           ;key.c: 83: g_ucTimerWorkCount++;
   728  0068  0AA0               	incf	_g_ucTimerWorkCount,f
   729                           
   730                           ;key.c: 84: holdOn_f = 1;
   731  0069  019D               	clrf	_holdOn_f
   732  006A  0A9D               	incf	_holdOn_f,f
   733  006B                     l5009:	
   734                           
   735                           ;key.c: 87: }
   736                           ;key.c: 90: if(holdOn_f) {
   737  006B  081D               	movf	_holdOn_f,w
   738  006C  1903               	btfsc	3,2
   739  006D  2877               	goto	l5019
   740                           
   741                           ;key.c: 92: if(g_ucTimerWorkCount < 60) {
   742  006E  303C               	movlw	60
   743  006F  0220               	subwf	_g_ucTimerWorkCount,w
   744  0070  1803               	btfsc	3,0
   745  0071  2874               	goto	l5015
   746                           
   747                           ;key.c: 93: g_ucTimerWorkCount++;
   748  0072  0AA0               	incf	_g_ucTimerWorkCount,f
   749                           
   750                           ;key.c: 94: } else {
   751  0073  2877               	goto	l5019
   752  0074                     l5015:	
   753                           
   754                           ;key.c: 95: holdOn_f = 0;
   755  0074  019D               	clrf	_holdOn_f
   756                           
   757                           ;key.c: 96: g_ucTimerWorkCount = 0;
   758  0075  01A0               	clrf	_g_ucTimerWorkCount
   759                           
   760                           ;key.c: 97: PowOff();
   761  0076  21A9               	fcall	_PowOff
   762  0077                     l5019:	
   763                           
   764                           ;key.c: 98: }
   765                           ;key.c: 101: }
   766                           ;key.c: 105: if(long_f){
   767  0077  081E               	movf	_long_f,w
   768  0078  1903               	btfsc	3,2
   769  0079  0008               	return
   770                           
   771                           ;key.c: 107: if(g_ucTimerWorkCount < 60) {
   772  007A  303C               	movlw	60
   773  007B  0220               	subwf	_g_ucTimerWorkCount,w
   774  007C  1803               	btfsc	3,0
   775  007D  2880               	goto	l5025
   776                           
   777                           ;key.c: 109: g_ucTimerWorkCount++;
   778  007E  0AA0               	incf	_g_ucTimerWorkCount,f
   779                           
   780                           ;key.c: 111: } else {
   781  007F  0008               	return
   782  0080                     l5025:	
   783                           
   784                           ;key.c: 113: long_f = 0;
   785  0080  019E               	clrf	_long_f
   786                           
   787                           ;key.c: 114: g_ucTimerWorkCount = 0;
   788  0081  01A0               	clrf	_g_ucTimerWorkCount
   789                           
   790                           ;key.c: 115: PowOff();
   791  0082  29A9               	ljmp	l4707
   792  0083                     __end_of_ScanKey:	
   793                           
   794                           	psect	text2
   795  019C                     __ptext2:	
   796  019C                     _PowOn:	
   797 ;; *************** function _PowOn *****************
   798 ;; Defined at:
   799 ;;		line 64 in file "led.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		None
   808 ;; Tracked objects:
   809 ;;		On entry : 100/0
   810 ;;		On exit  : 100/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON BANK0_4   BANK0
   813 ;;      Params:         0       0       0
   814 ;;      Locals:         0       0       0
   815 ;;      Temps:          0       0       0
   816 ;;      Totals:         0       0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    1
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_ScanKey
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           ;psect for function _PowOn
   827                           
   828  019C                     l4701:	
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _PowOn: []
   832                           ;led.c: 88: ODCON &= ~(0x01 << 3);
   833  019C  118C               	bcf	12,3	;volatile
   834                           
   835                           ;led.c: 90: TRISB |= (0x08);
   836  019D  15C6               	bsf	70,3	;volatile
   837                           
   838                           ;led.c: 92: PDCON1 |= (0x01 << 3);
   839  019E  15D2               	bsf	82,3	;volatile
   840                           
   841                           ;led.c: 93: PHCON &= ~(0x01 << 3);
   842  019F  118D               	bcf	13,3	;volatile
   843  01A0  0008               	return
   844  01A1                     __end_of_PowOn:	
   845                           
   846                           	psect	text3
   847  01A9                     __ptext3:	
   848  01A9                     _PowOff:	
   849 ;; *************** function _PowOff *****************
   850 ;; Defined at:
   851 ;;		line 109 in file "led.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		None
   860 ;; Tracked objects:
   861 ;;		On entry : 100/0
   862 ;;		On exit  : 100/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON BANK0_4   BANK0
   865 ;;      Params:         0       0       0
   866 ;;      Locals:         0       0       0
   867 ;;      Temps:          0       0       0
   868 ;;      Totals:         0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    1
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_ScanKey
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           ;psect for function _PowOff
   879                           
   880  01A9                     l4707:	
   881                           
   882                           ;incstack = 0
   883                           ; Regs used in _PowOff: []
   884                           ;led.c: 129: TRISB |= (0x08);
   885  01A9  15C6               	bsf	70,3	;volatile
   886                           
   887                           ;led.c: 130: PHCON |= (0x08);
   888  01AA  158D               	bsf	13,3	;volatile
   889  01AB  0008               	return
   890  01AC                     __end_of_PowOff:	
   891                           
   892                           	psect	text4
   893  016E                     __ptext4:	
   894  016E                     _MotoSwitch:	
   895 ;; *************** function _MotoSwitch *****************
   896 ;; Defined at:
   897 ;;		line 36 in file "led.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 100/0
   908 ;;		On exit  : 100/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON BANK0_4   BANK0
   911 ;;      Params:         0       0       0
   912 ;;      Locals:         0       0       0
   913 ;;      Temps:          0       0       0
   914 ;;      Totals:         0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_ScanKey
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           ;psect for function _MotoSwitch
   925                           
   926                           
   927                           ;led.c: 38: (BITS_DATA0.bit6) = !(BITS_DATA0.bit6);
   928                           ;incstack = 0
   929                           ; Regs used in _MotoSwitch: [status,0]
   930  016E  1003               	bcf	3,0
   931  016F  1F28               	btfss	_BITS_DATA0,6
   932  0170  1403               	bsf	3,0
   933  0171  1283               	bcf	3,5	;RP0=0, select bank0
   934  0172  1C03               	btfss	3,0
   935  0173  2976               	goto	L2
   936  0174  1728               	bsf	_BITS_DATA0,6
   937  0175  0008               	return
   938  0176                     L2:	
   939  0176  1328               	bcf	_BITS_DATA0,6
   940  0177  0008               	return
   941  0178                     __end_of_MotoSwitch:	
   942                           
   943                           	psect	text5
   944  0178                     __ptext5:	
   945  0178                     _LedSwitch:	
   946 ;; *************** function _LedSwitch *****************
   947 ;; Defined at:
   948 ;;		line 6 in file "led.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		status,0
   957 ;; Tracked objects:
   958 ;;		On entry : 100/0
   959 ;;		On exit  : 100/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMMON BANK0_4   BANK0
   962 ;;      Params:         0       0       0
   963 ;;      Locals:         0       0       0
   964 ;;      Temps:          0       0       0
   965 ;;      Totals:         0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used:    1
   968 ;; Hardware stack levels required when called:    1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_ScanKey
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           ;psect for function _LedSwitch
   976                           
   977                           
   978                           ;led.c: 9: (BITS_DATA0.bit5) = !(BITS_DATA0.bit5);
   979                           ;incstack = 0
   980                           ; Regs used in _LedSwitch: [status,0]
   981  0178  1003               	bcf	3,0
   982  0179  1EA8               	btfss	_BITS_DATA0,5
   983  017A  1403               	bsf	3,0
   984  017B  1283               	bcf	3,5	;RP0=0, select bank0
   985  017C  1C03               	btfss	3,0
   986  017D  2980               	goto	L3
   987  017E  16A8               	bsf	_BITS_DATA0,5
   988  017F  0008               	return
   989  0180                     L3:	
   990  0180  12A8               	bcf	_BITS_DATA0,5
   991  0181  0008               	return
   992  0182                     __end_of_LedSwitch:	
   993                           
   994                           	psect	text6
   995  01A1                     __ptext6:	
   996  01A1                     _MotoDisplay:	
   997 ;; *************** function _MotoDisplay *****************
   998 ;; Defined at:
   999 ;;		line 53 in file "led.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 100/0
  1010 ;;		On exit  : 100/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON BANK0_4   BANK0
  1013 ;;      Params:         0       0       0
  1014 ;;      Locals:         0       0       0
  1015 ;;      Temps:          0       0       0
  1016 ;;      Totals:         0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    2
  1020 ;; This function calls:
  1021 ;;		_MotoOff
  1022 ;;		_MotoOn
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           ;psect for function _MotoDisplay
  1028                           
  1029                           
  1030                           ;led.c: 55: if ((BITS_DATA0.bit6) == 1)
  1031                           ;incstack = 0
  1032                           ; Regs used in _MotoDisplay: [status,2+status,0+pclath+cstack]
  1033  01A1  1F28               	btfss	_BITS_DATA0,6
  1034  01A2  29A4               	goto	l4827
  1035                           
  1036                           ;led.c: 56: {
  1037                           ;led.c: 57: MotoOn();
  1038  01A3  29AC               	ljmp	l4713
  1039  01A4                     l4827:	
  1040                           
  1041                           ;led.c: 58: }
  1042                           ;led.c: 59: else
  1043                           ;led.c: 60: {
  1044                           ;led.c: 61: MotoOff();
  1045  01A4  29AF               	ljmp	l4715
  1046  01A5                     __end_of_MotoDisplay:	
  1047                           
  1048                           	psect	text7
  1049  01AC                     __ptext7:	
  1050  01AC                     _MotoOn:	
  1051 ;; *************** function _MotoOn *****************
  1052 ;; Defined at:
  1053 ;;		line 41 in file "led.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		None
  1062 ;; Tracked objects:
  1063 ;;		On entry : 100/0
  1064 ;;		On exit  : 100/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON BANK0_4   BANK0
  1067 ;;      Params:         0       0       0
  1068 ;;      Locals:         0       0       0
  1069 ;;      Temps:          0       0       0
  1070 ;;      Totals:         0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    1
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_MotoDisplay
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           ;psect for function _MotoOn
  1081                           
  1082  01AC                     l4713:	
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _MotoOn: []
  1086                           ;led.c: 43: PORTB0 = 0;
  1087  01AC  1006               	bcf	6,0	;volatile
  1088                           
  1089                           ;led.c: 44: MODSEL = 1;
  1090  01AD  17D5               	bsf	85,7	;volatile
  1091  01AE  0008               	return
  1092  01AF                     __end_of_MotoOn:	
  1093                           
  1094                           	psect	text8
  1095  01AF                     __ptext8:	
  1096  01AF                     _MotoOff:	
  1097 ;; *************** function _MotoOff *****************
  1098 ;; Defined at:
  1099 ;;		line 47 in file "led.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		None
  1108 ;; Tracked objects:
  1109 ;;		On entry : 100/0
  1110 ;;		On exit  : 100/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON BANK0_4   BANK0
  1113 ;;      Params:         0       0       0
  1114 ;;      Locals:         0       0       0
  1115 ;;      Temps:          0       0       0
  1116 ;;      Totals:         0       0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    1
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_MotoDisplay
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           ;psect for function _MotoOff
  1127                           
  1128  01AF                     l4715:	
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _MotoOff: []
  1132                           ;led.c: 49: PORTB0 = 1;
  1133  01AF  1406               	bsf	6,0	;volatile
  1134                           
  1135                           ;led.c: 50: MODSEL = 1;
  1136  01B0  17D5               	bsf	85,7	;volatile
  1137  01B1  0008               	return
  1138  01B2                     __end_of_MotoOff:	
  1139                           
  1140                           	psect	text9
  1141  01A5                     __ptext9:	
  1142  01A5                     _LedDisplay:	
  1143 ;; *************** function _LedDisplay *****************
  1144 ;; Defined at:
  1145 ;;		line 12 in file "led.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;		None
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;		None
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		status,2, status,0, pclath, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 100/0
  1156 ;;		On exit  : 100/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMMON BANK0_4   BANK0
  1159 ;;      Params:         0       0       0
  1160 ;;      Locals:         0       0       0
  1161 ;;      Temps:          0       0       0
  1162 ;;      Totals:         0       0       0
  1163 ;;Total ram usage:        0 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    2
  1166 ;; This function calls:
  1167 ;;		_LedOff
  1168 ;;		_LedOn
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           ;psect for function _LedDisplay
  1174                           
  1175                           
  1176                           ;led.c: 14: if ((BITS_DATA0.bit5) == 1)
  1177                           ;incstack = 0
  1178                           ; Regs used in _LedDisplay: [status,2+status,0+pclath+cstack]
  1179  01A5  1EA8               	btfss	_BITS_DATA0,5
  1180  01A6  29A8               	goto	l4821
  1181                           
  1182                           ;led.c: 15: {
  1183                           ;led.c: 16: LedOn();
  1184  01A7  29B2               	ljmp	l4709
  1185  01A8                     l4821:	
  1186                           
  1187                           ;led.c: 17: }
  1188                           ;led.c: 18: else
  1189                           ;led.c: 19: {
  1190                           ;led.c: 20: LedOff();
  1191  01A8  29B5               	ljmp	l4711
  1192  01A9                     __end_of_LedDisplay:	
  1193                           
  1194                           	psect	text10
  1195  01B2                     __ptext10:	
  1196  01B2                     _LedOn:	
  1197 ;; *************** function _LedOn *****************
  1198 ;; Defined at:
  1199 ;;		line 24 in file "led.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		None
  1208 ;; Tracked objects:
  1209 ;;		On entry : 100/0
  1210 ;;		On exit  : 100/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON BANK0_4   BANK0
  1213 ;;      Params:         0       0       0
  1214 ;;      Locals:         0       0       0
  1215 ;;      Temps:          0       0       0
  1216 ;;      Totals:         0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    1
  1220 ;; This function calls:
  1221 ;;		Nothing
  1222 ;; This function is called by:
  1223 ;;		_LedDisplay
  1224 ;; This function uses a non-reentrant model
  1225 ;;
  1226                           ;psect for function _LedOn
  1227                           
  1228  01B2                     l4709:	
  1229                           
  1230                           ;incstack = 0
  1231                           ; Regs used in _LedOn: []
  1232                           ;led.c: 26: PORTB1 = 0;
  1233  01B2  1086               	bcf	6,1	;volatile
  1234                           
  1235                           ;led.c: 27: MODSEL = 1;
  1236  01B3  17D5               	bsf	85,7	;volatile
  1237  01B4  0008               	return
  1238  01B5                     __end_of_LedOn:	
  1239                           
  1240                           	psect	text11
  1241  01B5                     __ptext11:	
  1242  01B5                     _LedOff:	
  1243 ;; *************** function _LedOff *****************
  1244 ;; Defined at:
  1245 ;;		line 30 in file "led.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		None
  1254 ;; Tracked objects:
  1255 ;;		On entry : 100/0
  1256 ;;		On exit  : 100/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON BANK0_4   BANK0
  1259 ;;      Params:         0       0       0
  1260 ;;      Locals:         0       0       0
  1261 ;;      Temps:          0       0       0
  1262 ;;      Totals:         0       0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    1
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_LedDisplay
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           ;psect for function _LedOff
  1273                           
  1274  01B5                     l4711:	
  1275                           
  1276                           ;incstack = 0
  1277                           ; Regs used in _LedOff: []
  1278                           ;led.c: 32: PORTB1 = 1;
  1279  01B5  1486               	bsf	6,1	;volatile
  1280                           
  1281                           ;led.c: 33: MODSEL = 1;
  1282  01B6  17D5               	bsf	85,7	;volatile
  1283  01B7  0008               	return
  1284  01B8                     __end_of_LedOff:	
  1285                           
  1286                           	psect	text12
  1287  0182                     __ptext12:	
  1288  0182                     _InitSystem:	
  1289 ;; *************** function _InitSystem *****************
  1290 ;; Defined at:
  1291 ;;		line 81 in file "init.c"
  1292 ;; Parameters:    Size  Location     Type
  1293 ;;		None
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;		None
  1296 ;; Return value:  Size  Location     Type
  1297 ;;                  1    wreg      void 
  1298 ;; Registers used:
  1299 ;;		wreg, status,2, status,0
  1300 ;; Tracked objects:
  1301 ;;		On entry : 100/0
  1302 ;;		On exit  : 100/0
  1303 ;;		Unchanged: 0/0
  1304 ;; Data sizes:     COMMON BANK0_4   BANK0
  1305 ;;      Params:         0       0       0
  1306 ;;      Locals:         0       0       0
  1307 ;;      Temps:          0       0       0
  1308 ;;      Totals:         0       0       0
  1309 ;;Total ram usage:        0 bytes
  1310 ;; Hardware stack levels used:    1
  1311 ;; Hardware stack levels required when called:    1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_main
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           ;psect for function _InitSystem
  1319                           
  1320                           
  1321                           ;init.c: 83: OSCCON = 0;
  1322                           ;incstack = 0
  1323                           ; Regs used in _InitSystem: [wreg+status,2+status,0]
  1324  0182  01D0               	clrf	80	;volatile
  1325                           
  1326                           ;init.c: 84: T0 = 0xCE;
  1327  0183  30CE               	movlw	206
  1328  0184  0081               	movwf	1	;volatile
  1329                           
  1330                           ;init.c: 86: OPTION = 0x00;
  1331  0185  01C1               	clrf	65	;volatile
  1332                           
  1333                           ;init.c: 87: PCON |= 0x90;
  1334  0186  3090               	movlw	144
  1335  0187  0488               	iorwf	8,f	;volatile
  1336                           
  1337                           ;init.c: 89: CMPCR = 0x00;
  1338  0188  01D1               	clrf	81	;volatile
  1339                           
  1340                           ;init.c: 90: INTFLAG &= 0xFE;
  1341  0189  100F               	bcf	15,0	;volatile
  1342                           
  1343                           ;init.c: 91: CMPCR |= 0X10;
  1344  018A  1651               	bsf	81,4	;volatile
  1345  018B  0008               	return
  1346  018C                     __end_of_InitSystem:	
  1347                           
  1348                           	psect	text13
  1349  0196                     __ptext13:	
  1350  0196                     _InitRam:	
  1351 ;; *************** function _InitRam *****************
  1352 ;; Defined at:
  1353 ;;		line 102 in file "init.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		status,2
  1362 ;; Tracked objects:
  1363 ;;		On entry : 100/0
  1364 ;;		On exit  : 100/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON BANK0_4   BANK0
  1367 ;;      Params:         0       0       0
  1368 ;;      Locals:         0       0       0
  1369 ;;      Temps:          0       0       0
  1370 ;;      Totals:         0       0       0
  1371 ;;Total ram usage:        0 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           ;psect for function _InitRam
  1381                           
  1382                           
  1383                           ;init.c: 104: (BITS_DATA0.bit0) = 0;
  1384                           ;incstack = 0
  1385                           ; Regs used in _InitRam: [status,2]
  1386  0196  1028               	bcf	_BITS_DATA0,0
  1387                           
  1388                           ;init.c: 105: (BITS_DATA0.bit5) = 0;
  1389  0197  12A8               	bcf	_BITS_DATA0,5
  1390                           
  1391                           ;init.c: 106: (BITS_DATA0.bit6) = 0;
  1392  0198  1328               	bcf	_BITS_DATA0,6
  1393                           
  1394                           ;init.c: 109: SleepCount = 0;
  1395  0199  019B               	clrf	_SleepCount
  1396  019A  019C               	clrf	_SleepCount+1
  1397  019B  0008               	return
  1398  019C                     __end_of_InitRam:	
  1399                           
  1400                           	psect	text14
  1401  00C8                     __ptext14:	
  1402  00C8                     _CountdownDisplay:	
  1403 ;; *************** function _CountdownDisplay *****************
  1404 ;; Defined at:
  1405 ;;		line 151 in file "led.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 100/0
  1416 ;;		On exit  : 100/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON BANK0_4   BANK0
  1419 ;;      Params:         0       0       0
  1420 ;;      Locals:         0       0       0
  1421 ;;      Temps:          0       0       0
  1422 ;;      Totals:         0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    3
  1426 ;; This function calls:
  1427 ;;		_bt_off
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           ;psect for function _CountdownDisplay
  1433                           
  1434                           
  1435                           ;led.c: 155: if ((BITS_DATA0.bit5) == 1)
  1436                           ;incstack = 0
  1437                           ; Regs used in _CountdownDisplay: [wreg+status,2+status,0+pclath+cstack]
  1438  00C8  1EA8               	btfss	_BITS_DATA0,5
  1439  00C9  28E3               	goto	l2175
  1440                           
  1441                           ;led.c: 156: {
  1442                           ;led.c: 158: lampTiming++;
  1443  00CA  0A95               	incf	_lampTiming,f
  1444  00CB  1903               	btfsc	3,2
  1445  00CC  0A96               	incf	_lampTiming+1,f
  1446  00CD  1903               	btfsc	3,2
  1447  00CE  0A97               	incf	_lampTiming+2,f
  1448  00CF  1903               	btfsc	3,2
  1449  00D0  0A98               	incf	_lampTiming+3,f
  1450                           
  1451                           ;led.c: 160: if(lampTiming > 124000)
  1452  00D1  0818               	movf	_lampTiming+3,w
  1453  00D2  1D03               	btfss	3,2
  1454  00D3  28E0               	goto	l5035
  1455  00D4  3001               	movlw	1
  1456  00D5  0217               	subwf	_lampTiming+2,w
  1457  00D6  1D03               	btfss	3,2
  1458  00D7  28DE               	goto	u763
  1459  00D8  30E4               	movlw	228
  1460  00D9  0216               	subwf	_lampTiming+1,w
  1461  00DA  1D03               	btfss	3,2
  1462  00DB  28DE               	goto	u763
  1463  00DC  3061               	movlw	97
  1464  00DD  0215               	subwf	_lampTiming,w
  1465  00DE                     u763:	
  1466  00DE  1C03               	btfss	3,0
  1467  00DF  28E7               	goto	l2177
  1468  00E0                     l5035:	
  1469                           
  1470                           ;led.c: 162: {
  1471                           ;led.c: 163: (BITS_DATA0.bit5) = 0;
  1472  00E0  12A8               	bcf	_BITS_DATA0,5
  1473                           
  1474                           ;led.c: 165: bt_off();
  1475  00E1  218C               	fcall	_bt_off
  1476  00E2  28E7               	goto	l2177
  1477  00E3                     l2175:	
  1478                           
  1479                           ;led.c: 174: else
  1480                           ;led.c: 175: {
  1481                           ;led.c: 177: lampTiming = 0;
  1482  00E3  0195               	clrf	_lampTiming
  1483  00E4  0196               	clrf	_lampTiming+1
  1484  00E5  0197               	clrf	_lampTiming+2
  1485  00E6  0198               	clrf	_lampTiming+3
  1486  00E7                     l2177:	
  1487                           
  1488                           ;led.c: 178: }
  1489                           ;led.c: 180: if ((BITS_DATA0.bit6) == 1)
  1490  00E7  1F28               	btfss	_BITS_DATA0,6
  1491  00E8  2901               	goto	l2178
  1492                           
  1493                           ;led.c: 181: {
  1494                           ;led.c: 182: motoTiming++;
  1495  00E9  0A91               	incf	_motoTiming,f
  1496  00EA  1903               	btfsc	3,2
  1497  00EB  0A92               	incf	_motoTiming+1,f
  1498  00EC  1903               	btfsc	3,2
  1499  00ED  0A93               	incf	_motoTiming+2,f
  1500  00EE  1903               	btfsc	3,2
  1501  00EF  0A94               	incf	_motoTiming+3,f
  1502                           
  1503                           ;led.c: 184: if(motoTiming > 124000)
  1504  00F0  0814               	movf	_motoTiming+3,w
  1505  00F1  1D03               	btfss	3,2
  1506  00F2  28FF               	goto	l5043
  1507  00F3  3001               	movlw	1
  1508  00F4  0213               	subwf	_motoTiming+2,w
  1509  00F5  1D03               	btfss	3,2
  1510  00F6  28FD               	goto	u783
  1511  00F7  30E4               	movlw	228
  1512  00F8  0212               	subwf	_motoTiming+1,w
  1513  00F9  1D03               	btfss	3,2
  1514  00FA  28FD               	goto	u783
  1515  00FB  3061               	movlw	97
  1516  00FC  0211               	subwf	_motoTiming,w
  1517  00FD                     u783:	
  1518  00FD  1C03               	btfss	3,0
  1519  00FE  0008               	return
  1520  00FF                     l5043:	
  1521                           
  1522                           ;led.c: 186: {
  1523                           ;led.c: 187: (BITS_DATA0.bit6) = 0;
  1524  00FF  1328               	bcf	_BITS_DATA0,6
  1525                           
  1526                           ;led.c: 189: bt_off();
  1527  0100  298C               	ljmp	l4717
  1528  0101                     l2178:	
  1529                           
  1530                           ;led.c: 198: else
  1531                           ;led.c: 199: {
  1532                           ;led.c: 201: motoTiming = 0;
  1533  0101  0191               	clrf	_motoTiming
  1534  0102  0192               	clrf	_motoTiming+1
  1535  0103  0193               	clrf	_motoTiming+2
  1536  0104  0194               	clrf	_motoTiming+3
  1537  0105  0008               	return
  1538  0106                     __end_of_CountdownDisplay:	
  1539                           
  1540                           	psect	text15
  1541  018C                     __ptext15:	
  1542  018C                     _bt_off:	
  1543 ;; *************** function _bt_off *****************
  1544 ;; Defined at:
  1545 ;;		line 96 in file "led.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 100/0
  1556 ;;		On exit  : 100/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON BANK0_4   BANK0
  1559 ;;      Params:         0       0       0
  1560 ;;      Locals:         0       0       0
  1561 ;;      Temps:          0       0       0
  1562 ;;      Totals:         0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    2
  1566 ;; This function calls:
  1567 ;;		_delay_ms
  1568 ;; This function is called by:
  1569 ;;		_CountdownDisplay
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           ;psect for function _bt_off
  1573                           
  1574  018C                     l4717:	
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _bt_off: [wreg+status,2+status,0+pclath+cstack]
  1578                           ;led.c: 98: PHCON |= (0x08);
  1579  018C  158D               	bsf	13,3	;volatile
  1580                           
  1581                           ;led.c: 99: PDCON1 |= (0x01 << 3);
  1582  018D  15D2               	bsf	82,3	;volatile
  1583                           
  1584                           ;led.c: 101: TRISB &= (0xF7);
  1585  018E  11C6               	bcf	70,3	;volatile
  1586                           
  1587                           ;led.c: 102: ODCON |= (0x08);
  1588  018F  158C               	bsf	12,3	;volatile
  1589                           
  1590                           ;led.c: 103: PORTB3 = 0;
  1591  0190  1186               	bcf	6,3	;volatile
  1592                           
  1593                           ;led.c: 105: extern void delay_ms(WORD xms);
  1594                           ;led.c: 106: delay_ms((WORD)500);
  1595  0191  30F4               	movlw	244
  1596  0192  00A4               	movwf	delay_ms@xms
  1597  0193  3001               	movlw	1
  1598  0194  00A5               	movwf	delay_ms@xms+1
  1599  0195  2924               	ljmp	l4649
  1600  0196                     __end_of_bt_off:	
  1601                           
  1602                           	psect	text16
  1603  0124                     __ptext16:	
  1604  0124                     _delay_ms:	
  1605 ;; *************** function _delay_ms *****************
  1606 ;; Defined at:
  1607 ;;		line 23 in file "main.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  xms             2    2[BANK0_] unsigned short 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  i               2    4[BANK0_] unsigned short 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0
  1616 ;; Tracked objects:
  1617 ;;		On entry : 100/0
  1618 ;;		On exit  : 100/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMMON BANK0_4   BANK0
  1621 ;;      Params:         0       2       0
  1622 ;;      Locals:         0       2       0
  1623 ;;      Temps:          0       0       0
  1624 ;;      Totals:         0       4       0
  1625 ;;Total ram usage:        4 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; Hardware stack levels required when called:    1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_bt_off
  1632 ;;		_main
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           ;psect for function _delay_ms
  1636                           
  1637  0124                     l4649:	
  1638                           
  1639                           ;main.c: 25: while (xms)
  1640                           ;incstack = 0
  1641                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  1642  0124  0824               	movf	delay_ms@xms,w
  1643  0125  0425               	iorwf	delay_ms@xms+1,w
  1644  0126  1903               	btfsc	3,2
  1645  0127  0008               	return
  1646                           
  1647                           ;main.c: 26: {
  1648                           ;main.c: 27: WORD i = 329;
  1649  0128  3049               	movlw	73
  1650  0129  00A6               	movwf	delay_ms@i
  1651  012A  3001               	movlw	1
  1652  012B  00A7               	movwf	delay_ms@i+1
  1653  012C                     l4645:	
  1654                           
  1655                           ;main.c: 29: while (i)
  1656  012C  0826               	movf	delay_ms@i,w
  1657  012D  0427               	iorwf	delay_ms@i+1,w
  1658  012E  1903               	btfsc	3,2
  1659  012F  2937               	goto	l2894
  1660  0130  0000               	nop	; ;# 
  1661                           
  1662                           ;main.c: 37: i--;
  1663  0131  3001               	movlw	1
  1664  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0133  02A6               	subwf	delay_ms@i,f
  1666  0134  1C03               	btfss	3,0
  1667  0135  03A7               	decf	delay_ms@i+1,f
  1668  0136  292C               	goto	l4645
  1669  0137                     l2894:	
  1670  0137  0064               	clrwdt	; ;# 
  1671                           
  1672                           ;main.c: 44: xms--;
  1673  0138  3001               	movlw	1
  1674  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1675  013A  02A4               	subwf	delay_ms@xms,f
  1676  013B  3000               	movlw	0
  1677  013C  1C03               	btfss	3,0
  1678  013D  03A5               	decf	delay_ms@xms+1,f
  1679  013E  02A5               	subwf	delay_ms@xms+1,f
  1680  013F  2924               	goto	l4649
  1681  0140                     __end_of_delay_ms:	
  1682                           
  1683                           	psect	text17
  1684  0083                     __ptext17:	
  1685  0083                     _CheckSleep:	
  1686 ;; *************** function _CheckSleep *****************
  1687 ;; Defined at:
  1688 ;;		line 33 in file "temp.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 100/0
  1699 ;;		On exit  : 100/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON BANK0_4   BANK0
  1702 ;;      Params:         0       0       0
  1703 ;;      Locals:         0       0       0
  1704 ;;      Temps:          0       0       0
  1705 ;;      Totals:         0       0       0
  1706 ;;Total ram usage:        0 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    2
  1709 ;; This function calls:
  1710 ;;		_InitPort
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           ;psect for function _CheckSleep
  1716                           
  1717                           
  1718                           ;temp.c: 35: if(1 == (BITS_DATA0.bit5) || 1 == (BITS_DATA0.bit6))
  1719                           ;incstack = 0
  1720                           ; Regs used in _CheckSleep: [wreg+status,2+status,0+pclath+cstack]
  1721  0083  1AA8               	btfsc	_BITS_DATA0,5
  1722  0084  2887               	goto	l4851
  1723  0085  1F28               	btfss	_BITS_DATA0,6
  1724  0086  2889               	goto	l4853
  1725  0087                     l4851:	
  1726                           
  1727                           ;temp.c: 36: {
  1728                           ;temp.c: 37: SleepCount = 0;
  1729  0087  019B               	clrf	_SleepCount
  1730  0088  019C               	clrf	_SleepCount+1
  1731  0089                     l4853:	
  1732                           
  1733                           ;temp.c: 38: }
  1734                           ;temp.c: 42: if(SleepCount < 1000)
  1735  0089  3003               	movlw	3
  1736  008A  021C               	subwf	_SleepCount+1,w
  1737  008B  30E8               	movlw	232
  1738  008C  1903               	btfsc	3,2
  1739  008D  021B               	subwf	_SleepCount,w
  1740  008E  1803               	btfsc	3,0
  1741  008F  2894               	goto	l4859
  1742                           
  1743                           ;temp.c: 44: {
  1744                           ;temp.c: 45: SleepCount++;
  1745  0090  0A9B               	incf	_SleepCount,f
  1746  0091  1903               	btfsc	3,2
  1747  0092  0A9C               	incf	_SleepCount+1,f
  1748  0093  0008               	return
  1749  0094                     l4859:	
  1750                           
  1751                           ;temp.c: 47: }
  1752                           ;temp.c: 49: RAMP = 0;
  1753  0094  01D5               	clrf	85	;volatile
  1754                           
  1755                           ;temp.c: 50: T1CON = 0;
  1756  0095  01CC               	clrf	76	;volatile
  1757                           
  1758                           ;temp.c: 51: CHARGE1 = 0;
  1759  0096  01D4               	clrf	84	;volatile
  1760                           
  1761                           ;temp.c: 52: CHARGE0 = 0;
  1762  0097  01D3               	clrf	83	;volatile
  1763                           
  1764                           ;temp.c: 53: PCON = 0;
  1765  0098  0188               	clrf	8	;volatile
  1766                           
  1767                           ;temp.c: 54: CMPCR = 0;
  1768  0099  01D1               	clrf	81	;volatile
  1769                           
  1770                           ;temp.c: 57: LVDM = 0;
  1771  009A  1251               	bcf	81,4	;volatile
  1772                           
  1773                           ;temp.c: 58: CMPEN = 0;
  1774  009B  1008               	bcf	8,0	;volatile
  1775                           
  1776                           ;temp.c: 59: CMPOF = 0;
  1777  009C  1288               	bcf	8,5	;volatile
  1778                           
  1779                           ;temp.c: 60: TEMPEN = 0;
  1780  009D  1354               	bcf	84,6	;volatile
  1781                           
  1782                           ;temp.c: 61: TMPF = 0;
  1783  009E  120F               	bcf	15,4	;volatile
  1784                           
  1785                           ;temp.c: 62: MODSEL = 0;
  1786  009F  13D5               	bcf	85,7	;volatile
  1787                           
  1788                           ;temp.c: 64: WDTEN = 0;
  1789  00A0  1388               	bcf	8,7	;volatile
  1790                           
  1791                           ;temp.c: 65: T0IE = 0;
  1792  00A1  100E               	bcf	14,0	;volatile
  1793                           
  1794                           ;temp.c: 67: INTECON = 0;
  1795  00A2  018E               	clrf	14	;volatile
  1796                           
  1797                           ;temp.c: 69: PORTB = 0;
  1798  00A3  0186               	clrf	6	;volatile
  1799                           
  1800                           ;temp.c: 71: TRISB = 0xff;
  1801  00A4  30FF               	movlw	255
  1802  00A5  00C6               	movwf	70	;volatile
  1803  00A6  0084               	movwf	4
  1804                           
  1805                           ;temp.c: 75: PDCON = 0xFF;
  1806  00A7  008B               	movwf	11	;volatile
  1807                           
  1808                           ;temp.c: 76: PDCON1 = 0xFF;
  1809  00A8  00D2               	movwf	82	;volatile
  1810                           
  1811                           ;temp.c: 79: PHCON = 0XFF;
  1812  00A9  008D               	movwf	13	;volatile
  1813                           
  1814                           ;temp.c: 81: PHCON &= (0xFB);
  1815  00AA  110D               	bcf	13,2	;volatile
  1816                           
  1817                           ;temp.c: 82: PHCON &= (0xEF);
  1818  00AB  120D               	bcf	13,4	;volatile
  1819                           
  1820                           ;temp.c: 85: IOCB = 0X00;
  1821  00AC  0189               	clrf	9	;volatile
  1822                           
  1823                           ;temp.c: 86: IOCB |= (0x04);
  1824  00AD  1509               	bsf	9,2	;volatile
  1825                           
  1826                           ;temp.c: 87: IOCB |= (0x10);
  1827  00AE  1609               	bsf	9,4	;volatile
  1828                           
  1829                           ;temp.c: 88: IOCB |= (0x01 << 5);
  1830  00AF  1689               	bsf	9,5	;volatile
  1831                           
  1832                           ;temp.c: 96: PBIF = 0;
  1833  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1834  00B1  108F               	bcf	15,1	;volatile
  1835                           
  1836                           ;temp.c: 97: PBIE = 1;
  1837  00B2  148E               	bsf	14,1	;volatile
  1838                           
  1839                           ;temp.c: 98: GIE = 0;
  1840  00B3  138E               	bcf	14,7	;volatile
  1841  00B4  0063               	sleep	;# 
  1842  00B5  0000               	nop	;# 
  1843  00B6  0000               	nop	;# 
  1844  00B7  0000               	nop	;# 
  1845  00B8  0000               	nop	;# 
  1846  00B9  0806               	movf	6,w	;# 
  1847                           
  1848                           ;temp.c: 112: PBIE = 0;
  1849  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1850  00BB  108E               	bcf	14,1	;volatile
  1851                           
  1852                           ;temp.c: 113: IOCB = 0;
  1853  00BC  0189               	clrf	9	;volatile
  1854                           
  1855                           ;temp.c: 114: LVDM = 1;
  1856  00BD  1651               	bsf	81,4	;volatile
  1857  00BE  0064               	clrwdt	; ;# 
  1858                           
  1859                           ;temp.c: 119: WDTEN = 1;
  1860  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  1861  00C0  1788               	bsf	8,7	;volatile
  1862                           
  1863                           ;temp.c: 120: GIE = 1;
  1864  00C1  178E               	bsf	14,7	;volatile
  1865                           
  1866                           ;temp.c: 121: T0IE = 1;
  1867  00C2  140E               	bsf	14,0	;volatile
  1868                           
  1869                           ;temp.c: 123: InitPort();
  1870  00C3  2106               	fcall	_InitPort
  1871                           
  1872                           ;temp.c: 143: MODSEL = 1;
  1873  00C4  17D5               	bsf	85,7	;volatile
  1874                           
  1875                           ;temp.c: 144: SleepCount = 0;
  1876  00C5  019B               	clrf	_SleepCount
  1877  00C6  019C               	clrf	_SleepCount+1
  1878  00C7  0008               	return
  1879  00C8                     __end_of_CheckSleep:	
  1880                           
  1881                           	psect	text18
  1882  0106                     __ptext18:	
  1883  0106                     _InitPort:	
  1884 ;; *************** function _InitPort *****************
  1885 ;; Defined at:
  1886 ;;		line 8 in file "init.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2
  1895 ;; Tracked objects:
  1896 ;;		On entry : 100/0
  1897 ;;		On exit  : 100/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMMON BANK0_4   BANK0
  1900 ;;      Params:         0       0       0
  1901 ;;      Locals:         0       0       0
  1902 ;;      Temps:          0       0       0
  1903 ;;      Totals:         0       0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    1
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;;		_CheckSleep
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           ;psect for function _InitPort
  1915                           
  1916                           
  1917                           ;init.c: 11: AUXR = 0;
  1918                           ;incstack = 0
  1919                           ; Regs used in _InitPort: [wreg+status,2]
  1920  0106  01D9               	clrf	89	;volatile
  1921                           
  1922                           ;init.c: 13: PORTB = 0;
  1923  0107  0186               	clrf	6	;volatile
  1924                           
  1925                           ;init.c: 21: TRISB = 0;
  1926  0108  01C6               	clrf	70	;volatile
  1927                           
  1928                           ;init.c: 22: TRISB |= (0x04);
  1929  0109  1546               	bsf	70,2	;volatile
  1930                           
  1931                           ;init.c: 23: TRISB |= (0x10);
  1932  010A  1646               	bsf	70,4	;volatile
  1933                           
  1934                           ;init.c: 24: TRISB |= (0x20);
  1935  010B  16C6               	bsf	70,5	;volatile
  1936                           
  1937                           ;init.c: 26: TRISB |= (0x08);
  1938  010C  15C6               	bsf	70,3	;volatile
  1939                           
  1940                           ;init.c: 33: PHCON = 0XFF;
  1941  010D  30FF               	movlw	255
  1942  010E  008D               	movwf	13	;volatile
  1943                           
  1944                           ;init.c: 35: PHCON &= (0xFE);
  1945  010F  100D               	bcf	13,0	;volatile
  1946                           
  1947                           ;init.c: 36: PHCON &= (0xFD);
  1948  0110  108D               	bcf	13,1	;volatile
  1949                           
  1950                           ;init.c: 38: PHCON &= (0xFB);
  1951  0111  110D               	bcf	13,2	;volatile
  1952                           
  1953                           ;init.c: 39: PHCON &= (0xEF);
  1954  0112  120D               	bcf	13,4	;volatile
  1955                           
  1956                           ;init.c: 45: PDCON = 0xFF;
  1957  0113  30FF               	movlw	255
  1958  0114  008B               	movwf	11	;volatile
  1959                           
  1960                           ;init.c: 46: PDCON1 = 0xFF;
  1961  0115  00D2               	movwf	82	;volatile
  1962                           
  1963                           ;init.c: 48: PDCON1 &= ~(0x01 << 5);
  1964  0116  12D2               	bcf	82,5	;volatile
  1965                           
  1966                           ;init.c: 53: IOCB = 0X00;
  1967  0117  0189               	clrf	9	;volatile
  1968                           
  1969                           ;init.c: 54: IOCB |= (0x04);
  1970  0118  1509               	bsf	9,2	;volatile
  1971                           
  1972                           ;init.c: 55: IOCB |= (0x10);
  1973  0119  1609               	bsf	9,4	;volatile
  1974                           
  1975                           ;init.c: 56: IOCB |= (0x20);
  1976  011A  1689               	bsf	9,5	;volatile
  1977                           
  1978                           ;init.c: 57: PBIE = 0;
  1979  011B  108E               	bcf	14,1	;volatile
  1980                           
  1981                           ;init.c: 63: ODCON = 0;
  1982  011C  018C               	clrf	12	;volatile
  1983                           
  1984                           ;init.c: 64: ODCON |= (0x01);
  1985  011D  140C               	bsf	12,0	;volatile
  1986                           
  1987                           ;init.c: 65: ODCON |= (0x02);
  1988  011E  148C               	bsf	12,1	;volatile
  1989                           
  1990                           ;init.c: 73: MODSEL = 1;
  1991  011F  17D5               	bsf	85,7	;volatile
  1992                           
  1993                           ;init.c: 74: PORTB1 = 1;
  1994  0120  1486               	bsf	6,1	;volatile
  1995                           
  1996                           ;init.c: 75: PORTB0 = 1;
  1997  0121  1406               	bsf	6,0	;volatile
  1998                           
  1999                           ;init.c: 76: PORTB3 = 0;
  2000  0122  1186               	bcf	6,3	;volatile
  2001  0123  0008               	return
  2002  0124                     __end_of_InitPort:	
  2003                           
  2004                           	psect	text19
  2005  0157                     __ptext19:	
  2006  0157                     _interrupt_handle:	
  2007 ;; *************** function _interrupt_handle *****************
  2008 ;; Defined at:
  2009 ;;		line 9 in file "interrupt.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, status,2, status,0
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 100/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMMON BANK0_4   BANK0
  2023 ;;      Params:         0       0       0
  2024 ;;      Locals:         0       0       0
  2025 ;;      Temps:          0       2       0
  2026 ;;      Totals:         0       2       0
  2027 ;;Total ram usage:        2 bytes
  2028 ;; Hardware stack levels used:    1
  2029 ;; This function calls:
  2030 ;;		Nothing
  2031 ;; This function is called by:
  2032 ;;		Interrupt level 1
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           ;psect for function _interrupt_handle
  2036                           
  2037                           
  2038                           ;interrupt.c: 11: if (PBIF)
  2039  0157  188F               	btfsc	15,1	;volatile
  2040                           
  2041                           ;interrupt.c: 12: {
  2042                           ;interrupt.c: 13: PBIF = 0;
  2043  0158  108F               	bcf	15,1	;volatile
  2044                           
  2045                           ;interrupt.c: 15: }
  2046                           ;interrupt.c: 16: if (T0IF)
  2047  0159  1C0F               	btfss	15,0	;volatile
  2048  015A  295E               	goto	i1l4925
  2049                           
  2050                           ;interrupt.c: 17: {
  2051                           ;interrupt.c: 18: T0IF = 0;
  2052  015B  100F               	bcf	15,0	;volatile
  2053                           
  2054                           ;interrupt.c: 19: T0 = 217;
  2055  015C  30D9               	movlw	217
  2056  015D  0081               	movwf	1	;volatile
  2057  015E                     i1l4925:	
  2058  015E  30C8               	movlw	200
  2059                           
  2060                           ;interrupt.c: 21: }
  2061                           ;interrupt.c: 23: g_ucTimer10msCount++;
  2062  015F  0AA1               	incf	_g_ucTimer10msCount,f
  2063                           
  2064                           ;interrupt.c: 29: if ((200) == g_ucTimer10msCount)
  2065  0160  0621               	xorwf	_g_ucTimer10msCount,w
  2066  0161  1D03               	btfss	3,2
  2067  0162  2965               	goto	i1l1399
  2068                           
  2069                           ;interrupt.c: 30: {
  2070                           ;interrupt.c: 31: g_ucTimer10msCount = 0;
  2071  0163  01A1               	clrf	_g_ucTimer10msCount
  2072                           
  2073                           ;interrupt.c: 32: (BITS_DATA0.bit0) = 1;
  2074  0164  1428               	bsf	_BITS_DATA0,0
  2075  0165                     i1l1399:	
  2076  0165  0823               	movf	??_interrupt_handle+1,w
  2077  0166  008A               	movwf	10
  2078  0167  0810               	movf	_itemp,w
  2079  0168  0087               	movwf	7
  2080  0169  0E22               	swapf	??_interrupt_handle^0,w
  2081  016A  0083               	movwf	3
  2082  016B  0EEE               	swapf	110,f
  2083  016C  0E6E               	swapf	110,w
  2084  016D  0009               	retfie
  2085  016E                     __end_of_interrupt_handle:	
  2086  006E                     btemp	set	110	;btemp
  2087  006E                     wtemp0	set	110
  2088                           
  2089                           	psect	intentry
  2090  0008                     __pintentry:	
  2091  0008                     interrupt_function:	
  2092                           ;incstack = 0
  2093                           ; Regs used in _interrupt_handle: [wreg+status,2+status,0]
  2094                           
  2095  006E                     saved_w	set	110
  2096  0008  1A83               	btfsc	3,5
  2097  0009  280C               	goto	SAVE_BANK1
  2098  000A  00EE               	movwf	110
  2099  000B  280F               	goto	EXIT_BANK_SAVE
  2100  000C                     SAVE_BANK1:	
  2101  000C  1283               	bcf	3,5
  2102  000D  00EE               	movwf	110
  2103  000E  1683               	bsf	3,5
  2104  000F                     EXIT_BANK_SAVE:	
  2105  000F  0E03               	swapf	3,w
  2106  0010  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0011  00A2               	movwf	??_interrupt_handle
  2108  0012  0807               	movf	7,w
  2109  0013  0090               	movwf	_itemp
  2110  0014  080A               	movf	10,w
  2111  0015  00A3               	movwf	??_interrupt_handle+1
  2112  0016  2957               	ljmp	_interrupt_handle


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0_4          14      6       7
    BANK0            47      0      17

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handle in COMMON

    None.

Critical Paths under _main in BANK0_4

    _main->_delay_ms
    _bt_off->_delay_ms

Critical Paths under _interrupt_handle in BANK0_4

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_handle in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     266
                         _CheckSleep
                   _CountdownDisplay
                           _InitPort
                            _InitRam
                         _InitSystem
                         _LedDisplay
                        _MotoDisplay
                            _ScanKey
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _ScanKey                                              0     0      0       0
                          _LedSwitch
                         _MotoSwitch
                             _PowOff
                              _PowOn
 ---------------------------------------------------------------------------------
 (2) _PowOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PowOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotoSwitch                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedSwitch                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MotoDisplay                                          0     0      0       0
                            _MotoOff
                             _MotoOn
 ---------------------------------------------------------------------------------
 (2) _MotoOn                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotoOff                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedDisplay                                           0     0      0       0
                             _LedOff
                              _LedOn
 ---------------------------------------------------------------------------------
 (2) _LedOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSystem                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitRam                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CountdownDisplay                                     0     0      0     133
                             _bt_off
 ---------------------------------------------------------------------------------
 (2) _bt_off                                               0     0      0     133
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     133
                                              2 BANK0_4    4     2      2
 ---------------------------------------------------------------------------------
 (1) _CheckSleep                                           0     0      0       0
                           _InitPort
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_handle                                     2     2      0       0
                                              0 BANK0_4    2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckSleep
     _InitPort
   _CountdownDisplay
     _bt_off
       _delay_ms
   _InitPort
   _InitRam
   _InitSystem
   _LedDisplay
     _LedOff
     _LedOn
   _MotoDisplay
     _MotoOff
     _MotoOn
   _ScanKey
     _LedSwitch
     _MotoSwitch
     _PowOff
     _PowOn
   _delay_ms

 _interrupt_handle (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0      18       3        0.0%
BITBANK0_4           E      0       0       4        0.0%
BANK0_4              E      6       7       5       50.0%
BITBANK0            2F      0       0       6        0.0%
BANK0               2F      0      11       7       36.2%
ABS                  0      0      18       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jul 25 18:04:20 2025

                        L1 0044                          L2 0176                          L3 0180  
                       _S0 0298                         _S1 0299                         _T0 0001  
                       _S2 029A                         _T1 004D                         _S3 029B  
                       _S4 029C                         _S5 029D                         _S6 029E  
                       _S7 029F                         _S8 02A0                         _S9 02A1  
                      _GIE 0077                        _BOR 02CE                        _BUZ 0265  
                      _PS0 0208                        _PS1 0209                        _PS2 020A  
                      _SCS 0280                        _PSA 020B                        u763 00DE  
                      u783 00FD                        _POR 02CF                 _CheckSleep 0083  
                     l2175 00E3                       l2177 00E7                       l2178 0101  
                     l5015 0074                       l5025 0080                       l5009 006B  
                     l5043 00FF                       l5035 00E0                       l5019 0077  
                     l1764 001F                       l2901 014C                       l1766 0045  
                     l1767 003D                       l5063 0154                       l1769 0041  
                     l4701 019C                       l4711 01B5                       l4713 01AC  
                     l4715 01AF                       l4707 01A9                       l4645 012C  
                     l4717 018C                       l4709 01B2                       l4821 01A8  
                     l2894 0137                       l4649 0124                       l4851 0087  
                     l4827 01A4                       l4853 0089                       l4859 0094  
                     l4963 0031                       l4959 002C                       l4993 005B  
                     l4985 0054                       l4999 0062                       _T0CK 025F  
                     _T0IE 0070                       _T0IF 0078                       _T0CR 004B  
                     _T0CS 020D                       _T1IE 0259                       _T1IF 0258  
                     _T1EN 0267                       _PDB3 0293                       _PDB4 0294  
                     _PDB5 0295                       _PDB6 0296                       _T0SE 020C  
                     _PDB7 0297                       _IOCB 0009                       _AUXR 0059  
                     _PBIE 0071                       _PBIF 0079                       _PCON 0008  
                     _HXEN 0281                       _RAMP 0055                       _LVDM 028C  
                     _TMPF 007C           _CountdownDisplay 00C8                       _main 0140  
                     btemp 006E                       start 0017            __end_of_InitRam 019C  
          __end_of_ScanKey 0083                 _LedDisplay 01A5            __end_of_MotoOff 01B2  
 __end_of_interrupt_handle 016E                      ?_main 0022                      _T1CK0 0263  
                    _T1CK1 0264                      _CMPIE 028A                      _CMPEN 0040  
                    _CMPCR 0051                      _CMPOF 0045                      _T1CON 004C  
                    _CMPWK 028B                      _CPPIS 0288                      _T1PR0 0260  
                    _T1PR1 0261                      _T1PR2 0262                      _ODCON 000C  
                    _PDCON 000B                      _PHCON 000D                      _PWM0E 0266  
                    _PWM1E 0241                      _PWM2E 0240                      _SLOP0 02A8  
                    _PWM0P 004F                      _SLOP1 02A9                      _SLOP2 02AA  
                    _PWM1P 0049                      _PWM2P 004A                      _PORTB 0006  
                    _WDTEN 0047                      _PWMCK 0244                      _PWMCT 02C8  
                    _PWMMD 0243                      _TRISB 0046                      _LedOn 01B2  
                    _PowOn 019C                      _itemp 0010                      wtemp0 006E  
          __initialization 0018               __end_of_main 0157                 _InitSystem 0182  
         __end_of_InitPort 0124                     ??_main 0000                     ?_LedOn 0000  
                   ?_PowOn 0000         __size_of_LedSwitch 000A              ??_MotoDisplay 0000  
              ?_CheckSleep 0000                     _CMPIES 0289                     _T1LOAD 004E  
                   i1l1399 0165                     _PDCON1 0052                     i1l4925 015E  
                   _INTEDG 020E                     _MODSEL 02AF                     _OSCCON 0050  
                   _TEMPEN 02A6                     _PWM0OE 0247                     _PWM3CT 02C9  
                   _PWM1OE 0246                     _PWM2OE 0245                     _PORTB0 0030  
                   _PORTB1 0031                     _PORTB2 0032                     _PORTB3 0033  
                   _PORTB4 0034                     _PORTB5 0035                     _OPTION 0041  
                   _PWMCON 0048                     _TRISB0 0230                     _TRISB1 0231  
                   _TRISB2 0232                     _TRISB3 0233                     _TRISB4 0234  
                   _TRISB5 0235                     _TRISB6 0236                     _PWMINV 0242  
                   _TRISB7 0237                  ??_InitRam 0000                     _LedOff 01B5  
         __end_of_delay_ms 0140                  ??_ScanKey 0000                 _SleepCount 001B  
               _MotoSwitch 016E                  ??_MotoOff 0000                     _MotoOn 01AC  
                   _PowOff 01A9                     _bt_off 018C                ?_LedDisplay 0022  
                   _long_f 001E                     saved_w 006E               __pbssBANK0_4 0028  
  __end_of__initialization 0018        __end_of_MotoDisplay 01A5              __end_of_LedOn 01B5  
           __pcstackCOMMON 0000          __end_of_LedSwitch 0182              __end_of_PowOn 01A1  
              ?_InitSystem 0022        __size_of_CheckSleep 0045   __end_of_CountdownDisplay 0106  
                  ??_LedOn 0000                    ??_PowOn 0000                 __pbssBANK0 0011  
      __size_of_LedDisplay 0004                  ?_InitPort 0022                  SAVE_BANK1 000C  
                  ?_LedOff 0000                ?_MotoSwitch 0000                    ?_MotoOn 0022  
                  ?_PowOff 0000                 __pmaintext 0140                 __pintentry 0008  
                  ?_bt_off 0022         _g_ucTimer10msCount 0021                    _CHARGE0 0053  
                  _CHARGE1 0054                    _CHARGEN 02A7          ?_interrupt_handle 0022  
       ??_interrupt_handle 0022                    _T0OSCEN 0287                    _HIRCTRM 005B  
                  _INTECON 000E                    _INTFLAG 000F                  ?_delay_ms 0024  
                  _RCTRMEN 02CA                _MotoDisplay 01A1        __size_of_InitSystem 000A  
               _lampTiming 0015                 ??_InitPort 0000                    _InitRam 0196  
                  _ScanKey 001A            __size_of_LedOff 0003                    _MotoOff 01AF  
          __size_of_MotoOn 0003            __size_of_PowOff 0003            __size_of_bt_off 000A  
                  __ptext0 0000                    __ptext1 001A                    __ptext2 019C  
                  __ptext3 01A9                    __ptext4 016E                    __ptext5 0178  
                  __ptext6 01A1                    __ptext7 01AC                    __ptext8 01AF  
                  __ptext9 01A5                    _occupy1 0042                    _occupy2 0047  
                  _occupy3 005A                 ??_delay_ms 0000        __size_of_MotoSwitch 000A  
             ??_CheckSleep 0000       end_of_initialization 0018                 _motoTiming 0011  
             ??_LedDisplay 0000         __end_of_CheckSleep 00C8         __end_of_LedDisplay 01A9  
          __pcstackBANK0_4 0022             __end_of_LedOff 01B8             __end_of_MotoOn 01AF  
           __end_of_PowOff 01AC               ??_InitSystem 0000                  _LedSwitch 0178  
           __end_of_bt_off 0196          ?_CountdownDisplay 0022         ??_CountdownDisplay 0000  
      start_initialization 0018         __end_of_InitSystem 018C              EXIT_BANK_SAVE 000F  
                 ??_LedOff 0000          __size_of_InitPort 001E               ??_MotoSwitch 0000  
                 ??_MotoOn 0000                   ??_PowOff 0000              _longpress_cnt 0019  
                 ??_bt_off 0000                 ?_LedSwitch 0000                  ___latbits 0000  
            __pcstackBANK0 0000         __end_of_MotoSwitch 0178               ?_MotoDisplay 0022  
       _g_ucTimerWorkCount 0020          __size_of_delay_ms 001C  __size_of_interrupt_handle 0017  
                 ?_InitRam 0022                   ?_ScanKey 0022                   ?_MotoOff 0022  
           __size_of_LedOn 0003             __size_of_PowOn 0005                _clink_event 001F  
        interrupt_function 0008                  delay_ms@i 0026                   _SINK_SEL 02AE  
              ??_LedSwitch 0000                   _InitPort 0106           __size_of_InitRam 0006  
         __size_of_ScanKey 0069           __size_of_MotoOff 0003                 _BITS_DATA0 0028  
                 _delay_ms 0124                   __ptext10 01B2                   __ptext11 01B5  
                 __ptext12 0182                   __ptext13 0196                   __ptext14 00C8  
                 __ptext15 018C                   __ptext16 0124                   __ptext17 0083  
                 __ptext18 0106                   __ptext19 0157           _interrupt_handle 0157  
     __size_of_MotoDisplay 0004                   _holdOn_f 001D  __size_of_CountdownDisplay 003E  
            __size_of_main 0017                delay_ms@xms 0024                   intlevel1 0000  
