

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Sep 05 15:41:54 2025


     1                           	processor	18p018a0
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0_4,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0_4,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	intentry,global,class=CODE,delta=2
    32                           	psect	pa_nodes0,global,class=CODE,delta=2
    33                           	psect	pa_nodes0,global,class=CODE,delta=2
    34                           	dabs	1,0x5B,1,_HIRCTRM
    35                           	dabs	1,0x5A,1,_occupy3
    36                           	dabs	1,0x59,1,_AUXR
    37                           	dabs	1,0x55,1,_RAMP
    38                           	dabs	1,0x54,1,_CHARGE1
    39                           	dabs	1,0x53,1,_CHARGE0
    40                           	dabs	1,0x52,1,_PDCON1
    41                           	dabs	1,0x51,1,_CMPCR
    42                           	dabs	1,0x50,1,_OSCCON
    43                           	dabs	1,0x4F,1,_PWM0P
    44                           	dabs	1,0x4E,1,_T1LOAD
    45                           	dabs	1,0x4D,1,_T1
    46                           	dabs	1,0x4C,1,_T1CON
    47                           	dabs	1,0x4B,1,_T0CR
    48                           	dabs	1,0x4A,1,_PWM2P
    49                           	dabs	1,0x49,1,_PWM1P
    50                           	dabs	1,0x48,1,_PWMCON
    51                           	dabs	1,0x47,1,_occupy2
    52                           	dabs	1,0x46,1,_TRISB
    53                           	dabs	1,0x42,1,_occupy1
    54                           	dabs	1,0x41,1,_OPTION
    55                           	dabs	1,0x2CF,0,_POR
    56                           	dabs	1,0x59,1
    57                           	dabs	1,0x2CE,0,_BOR
    58                           	dabs	1,0x59,1
    59                           	dabs	1,0x2CA,0,_RCTRMEN
    60                           	dabs	1,0x59,1
    61                           	dabs	1,0x2C9,0,_PWM3CT
    62                           	dabs	1,0x59,1
    63                           	dabs	1,0x2C8,0,_PWMCT
    64                           	dabs	1,0x59,1
    65                           	dabs	1,0x2AF,0,_MODSEL
    66                           	dabs	1,0x55,1
    67                           	dabs	1,0x2AE,0,_SINK_SEL
    68                           	dabs	1,0x55,1
    69                           	dabs	1,0x2AA,0,_SLOP2
    70                           	dabs	1,0x55,1
    71                           	dabs	1,0x2A9,0,_SLOP1
    72                           	dabs	1,0x55,1
    73                           	dabs	1,0x2A8,0,_SLOP0
    74                           	dabs	1,0x55,1
    75                           	dabs	1,0x2A7,0,_CHARGEN
    76                           	dabs	1,0x54,1
    77                           	dabs	1,0x2A6,0,_TEMPEN
    78                           	dabs	1,0x54,1
    79                           	dabs	1,0x2A1,0,_S9
    80                           	dabs	1,0x54,1
    81                           	dabs	1,0x2A0,0,_S8
    82                           	dabs	1,0x54,1
    83                           	dabs	1,0x29F,0,_S7
    84                           	dabs	1,0x53,1
    85                           	dabs	1,0x29E,0,_S6
    86                           	dabs	1,0x53,1
    87                           	dabs	1,0x29D,0,_S5
    88                           	dabs	1,0x53,1
    89                           	dabs	1,0x29C,0,_S4
    90                           	dabs	1,0x53,1
    91                           	dabs	1,0x29B,0,_S3
    92                           	dabs	1,0x53,1
    93                           	dabs	1,0x29A,0,_S2
    94                           	dabs	1,0x53,1
    95                           	dabs	1,0x299,0,_S1
    96                           	dabs	1,0x53,1
    97                           	dabs	1,0x298,0,_S0
    98                           	dabs	1,0x53,1
    99                           	dabs	1,0x297,0,_PDB7
   100                           	dabs	1,0x52,1
   101                           	dabs	1,0x296,0,_PDB6
   102                           	dabs	1,0x52,1
   103                           	dabs	1,0x295,0,_PDB5
   104                           	dabs	1,0x52,1
   105                           	dabs	1,0x294,0,_PDB4
   106                           	dabs	1,0x52,1
   107                           	dabs	1,0x293,0,_PDB3
   108                           	dabs	1,0x52,1
   109                           	dabs	1,0x28C,0,_LVDM
   110                           	dabs	1,0x51,1
   111                           	dabs	1,0x28B,0,_CMPWK
   112                           	dabs	1,0x51,1
   113                           	dabs	1,0x28A,0,_CMPIE
   114                           	dabs	1,0x51,1
   115                           	dabs	1,0x289,0,_CMPIES
   116                           	dabs	1,0x51,1
   117                           	dabs	1,0x288,0,_CPPIS
   118                           	dabs	1,0x51,1
   119                           	dabs	1,0x287,0,_T0OSCEN
   120                           	dabs	1,0x50,1
   121                           	dabs	1,0x281,0,_HXEN
   122                           	dabs	1,0x50,1
   123                           	dabs	1,0x280,0,_SCS
   124                           	dabs	1,0x50,1
   125                           	dabs	1,0x267,0,_T1EN
   126                           	dabs	1,0x4C,1
   127                           	dabs	1,0x266,0,_PWM0E
   128                           	dabs	1,0x4C,1
   129                           	dabs	1,0x265,0,_BUZ
   130                           	dabs	1,0x4C,1
   131                           	dabs	1,0x264,0,_T1CK1
   132                           	dabs	1,0x4C,1
   133                           	dabs	1,0x263,0,_T1CK0
   134                           	dabs	1,0x4C,1
   135                           	dabs	1,0x262,0,_T1PR2
   136                           	dabs	1,0x4C,1
   137                           	dabs	1,0x261,0,_T1PR1
   138                           	dabs	1,0x4C,1
   139                           	dabs	1,0x260,0,_T1PR0
   140                           	dabs	1,0x4C,1
   141                           	dabs	1,0x25F,0,_T0CK
   142                           	dabs	1,0x4B,1
   143                           	dabs	1,0x259,0,_T1IE
   144                           	dabs	1,0x4B,1
   145                           	dabs	1,0x258,0,_T1IF
   146                           	dabs	1,0x4B,1
   147                           	dabs	1,0x247,0,_PWM0OE
   148                           	dabs	1,0x48,1
   149                           	dabs	1,0x246,0,_PWM1OE
   150                           	dabs	1,0x48,1
   151                           	dabs	1,0x245,0,_PWM2OE
   152                           	dabs	1,0x48,1
   153                           	dabs	1,0x244,0,_PWMCK
   154                           	dabs	1,0x48,1
   155                           	dabs	1,0x243,0,_PWMMD
   156                           	dabs	1,0x48,1
   157                           	dabs	1,0x242,0,_PWMINV
   158                           	dabs	1,0x48,1
   159                           	dabs	1,0x241,0,_PWM1E
   160                           	dabs	1,0x48,1
   161                           	dabs	1,0x240,0,_PWM2E
   162                           	dabs	1,0x48,1
   163                           	dabs	1,0x237,0,_TRISB7
   164                           	dabs	1,0x46,1
   165                           	dabs	1,0x236,0,_TRISB6
   166                           	dabs	1,0x46,1
   167                           	dabs	1,0x235,0,_TRISB5
   168                           	dabs	1,0x46,1
   169                           	dabs	1,0x234,0,_TRISB4
   170                           	dabs	1,0x46,1
   171                           	dabs	1,0x233,0,_TRISB3
   172                           	dabs	1,0x46,1
   173                           	dabs	1,0x232,0,_TRISB2
   174                           	dabs	1,0x46,1
   175                           	dabs	1,0x231,0,_TRISB1
   176                           	dabs	1,0x46,1
   177                           	dabs	1,0x230,0,_TRISB0
   178                           	dabs	1,0x46,1
   179                           	dabs	1,0x20E,0,_INTEDG
   180                           	dabs	1,0x41,1
   181                           	dabs	1,0x20D,0,_T0CS
   182                           	dabs	1,0x41,1
   183                           	dabs	1,0x20C,0,_T0SE
   184                           	dabs	1,0x41,1
   185                           	dabs	1,0x20B,0,_PSA
   186                           	dabs	1,0x41,1
   187                           	dabs	1,0x20A,0,_PS2
   188                           	dabs	1,0x41,1
   189                           	dabs	1,0x209,0,_PS1
   190                           	dabs	1,0x41,1
   191                           	dabs	1,0x208,0,_PS0
   192                           	dabs	1,0x41,1
   193                           	dabs	1,0x10,1,_itemp
   194                           	dabs	1,0x6E,2
   195  0021                     
   196                           	psect	text0
   197  0000                     __ptext0:	
   198                           ; Version 1.45
   199                           ; Generated 16/11/2017 GMT
   200                           ; 
   201                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   202                           ; All rights reserved.
   203                           ; 
   204                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   205                           ; 
   206                           ; Redistribution and use in source and binary forms, with or without modification, are
   207                           ; permitted provided that the following conditions are met:
   208                           ; 
   209                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   210                           ;        conditions and the following disclaimer.
   211                           ; 
   212                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   213                           ;        of conditions and the following disclaimer in the documentation and/or other
   214                           ;        materials provided with the distribution.
   215                           ; 
   216                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   217                           ;        software without specific prior written permission.
   218                           ; 
   219                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   220                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   221                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   222                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   223                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   224                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   225                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   226                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   227                           ; 
   228                           ; 
   229                           ; Code-generator required, PIC16F887 Definitions
   230                           ; 
   231                           ; SFR Addresses
   232                           	;_PS0
   233  000F                     _INTFLAG	set	15
   234  000E                     _INTECON	set	14
   235  000D                     _PHCON	set	13
   236  000C                     _ODCON	set	12
   237  000B                     _PDCON	set	11
   238  0009                     _IOCB	set	9
   239  0008                     _PCON	set	8
   240  0006                     _PORTB	set	6
   241  0001                     _T0	set	1
   242  007C                     _TMPF	set	124
   243  0079                     _PBIF	set	121
   244  0078                     _T0IF	set	120
   245  0077                     _GIE	set	119
   246  0071                     _PBIE	set	113
   247  0070                     _T0IE	set	112
   248  0047                     _WDTEN	set	71
   249  0045                     _CMPOF	set	69
   250  0040                     _CMPEN	set	64
   251  0035                     _PORTB5	set	53
   252  0034                     _PORTB4	set	52
   253  0033                     _PORTB3	set	51
   254  0032                     _PORTB2	set	50
   255  0031                     _PORTB1	set	49
   256  0030                     _PORTB0	set	48
   257                           
   258                           	psect	cinit
   259  0018                     start_initialization:	
   260  0018                     __initialization:	
   261                           ; #config settings
   262                           
   263  0018                     end_of_initialization:	
   264  0018                     __end_of__initialization:	
   265                           ;End of C runtime variable initialization code
   266                           
   267  0018  0183               	clrf	3
   268  0019  28EA               	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssBANK0_4
   271  0024                     __pbssBANK0_4:	
   272  0024                     _flag_is_device_open:	
   273  0024                     	ds	1
   274  0025                     _flag_is_blue_tooth_open:	
   275  0025                     	ds	1
   276  0026                     _BITS_DATA0:	
   277  0026                     	ds	1
   278                           
   279                           	psect	bssBANK0
   280  0011                     __pbssBANK0:	
   281  0011                     _power_off_cnt:	
   282  0011                     	ds	4
   283  0015                     _longpress_cnt:	
   284  0015                     	ds	2
   285  0017                     _SleepCount:	
   286  0017                     	ds	2
   287  0019                     _holdOn_f:	
   288  0019                     	ds	1
   289  001A                     _long_f:	
   290  001A                     	ds	1
   291  001B                     _clink_event:	
   292  001B                     	ds	1
   293  001C                     _g_ucTimerWorkCount:	
   294  001C                     	ds	1
   295  001D                     _g_ucTimer10msCount:	
   296  001D                     	ds	1
   297                           
   298                           	psect	cstackCOMMON
   299  0000                     __pcstackCOMMON:	
   300  0000                     ??_PowOn:	
   301  0000                     ??_MotoSwitch:	
   302  0000                     ??_LedSwitch:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0000                     ??_PowOff:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0000                     ??_LedOn:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0000                     ??_LedOff:	
   312                           ; 1 bytes @ 0x0
   313                           
   314  0000                     ??_delay_ms:	
   315                           ; 1 bytes @ 0x0
   316                           
   317  0000                     ??_CheckSleep:	
   318                           ; 1 bytes @ 0x0
   319                           
   320  0000                     ??_InitPort:	
   321                           ; 1 bytes @ 0x0
   322                           
   323  0000                     ??_InitSystem:	
   324                           ; 1 bytes @ 0x0
   325                           
   326  0000                     ??_InitRam:	
   327                           ; 1 bytes @ 0x0
   328                           
   329  0000                     ??_ScanKey:	
   330                           ; 1 bytes @ 0x0
   331                           
   332  0000                     ??_LedDisplay:	
   333                           ; 1 bytes @ 0x0
   334                           
   335  0000                     ??_MotoOn:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0000                     ??_MotoOff:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0000                     ??_MotoDisplay:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0000                     ??_bt_off:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0000                     ??_CountdownDisplay:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0000                     ??_main:	
   351                           ; 1 bytes @ 0x0
   352                           
   353                           
   354                           	psect	cstackBANK0_4
   355  001E                     __pcstackBANK0_4:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  001E                     ?_InitPort:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  001E                     ?_InitSystem:	
   362  001E                     ?_InitRam:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  001E                     ?_interrupt_handle:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  001E                     ??_interrupt_handle:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  001E                     ?_ScanKey:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  001E                     ?_LedDisplay:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  001E                     ?_MotoOn:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  001E                     ?_MotoOff:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  001E                     ?_MotoDisplay:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  001E                     ?_bt_off:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  001E                     ?_CountdownDisplay:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  001E                     ?_main:	
   393                           ; 1 bytes @ 0x0
   394                           
   395                           
   396                           ; 1 bytes @ 0x0
   397                           ; 1 bytes @ 0x0
   398  001E                     	ds	2
   399  0020                     ?_delay_ms:	
   400  0020                     delay_ms@xms:	
   401                           
   402                           ; 1 bytes @ 0x2
   403                           ; 2 bytes @ 0x2
   404  0020                     	ds	2
   405  0022                     delay_ms@i:	
   406                           
   407                           ; 2 bytes @ 0x4
   408  0022                     	ds	2
   409                           
   410                           	psect	cstackBANK0
   411  0000                     __pcstackBANK0:	
   412  0000                     ?_PowOn:	
   413  0000                     ?_MotoSwitch:	
   414  0000                     ?_LedSwitch:	
   415                           ; 1 bytes @ 0x0
   416                           
   417  0000                     ?_PowOff:	
   418                           ; 1 bytes @ 0x0
   419                           
   420  0000                     ?_LedOn:	
   421                           ; 1 bytes @ 0x0
   422                           
   423  0000                     ?_LedOff:	
   424                           ; 1 bytes @ 0x0
   425                           
   426  0000                     ?_CheckSleep:	
   427                           ; 1 bytes @ 0x0
   428                           
   429                           
   430                           	psect	maintext
   431  00EA                     __pmaintext:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  00EA                     _main:	
   435                           ; 1 bytes @ 0x0
   436 ;;
   437 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   438 ;;
   439 ;; *************** function _main *****************
   440 ;; Defined at:
   441 ;;		line 48 in file "main.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, pclath, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : B00/0
   452 ;;		On exit  : 100/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMMON BANK0_4   BANK0
   455 ;;      Params:         0       0       0
   456 ;;      Locals:         0       0       0
   457 ;;      Temps:          0       0       0
   458 ;;      Totals:         0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels required when called:    4
   461 ;; This function calls:
   462 ;;		_CheckSleep
   463 ;;		_CountdownDisplay
   464 ;;		_InitPort
   465 ;;		_InitRam
   466 ;;		_InitSystem
   467 ;;		_LedDisplay
   468 ;;		_MotoDisplay
   469 ;;		_ScanKey
   470 ;;		_delay_ms
   471 ;; This function is called by:
   472 ;;		Startup code after reset
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           ;psect for function _main
   476                           
   477                           
   478                           ;main.c: 50: InitPort();
   479                           ;incstack = 0
   480                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   481  00EA  210B               	fcall	_InitPort
   482                           
   483                           ;main.c: 51: InitSystem();
   484  00EB  217C               	fcall	_InitSystem
   485                           
   486                           ;main.c: 52: InitRam();
   487  00EC  218D               	fcall	_InitRam
   488                           
   489                           ;main.c: 53: T0IE = 1;
   490  00ED  140E               	bsf	14,0	;volatile
   491                           
   492                           ;main.c: 54: GIE = 1;
   493  00EE  178E               	bsf	14,7	;volatile
   494  00EF  0064               	clrwdt	; ;# 
   495                           
   496                           ;main.c: 76: delay_ms(500);
   497  00F0  30F4               	movlw	244
   498  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   499  00F2  00A0               	movwf	delay_ms@xms
   500  00F3  3001               	movlw	1
   501  00F4  00A1               	movwf	delay_ms@xms+1
   502  00F5  2129               	fcall	_delay_ms
   503  00F6                     l2904:	
   504                           
   505                           ;main.c: 77: while (1)
   506  00F6  0064               	clrwdt	; ;# 
   507                           
   508                           ;main.c: 85: if ((BITS_DATA0.bit0))
   509  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   510  00F8  1C26               	btfss	_BITS_DATA0,0
   511  00F9  28FE               	goto	l5082
   512                           
   513                           ;main.c: 86: {
   514                           ;main.c: 87: (BITS_DATA0.bit0) = 0;
   515  00FA  1026               	bcf	_BITS_DATA0,0
   516                           
   517                           ;main.c: 89: ScanKey();
   518  00FB  201A               	fcall	_ScanKey
   519                           
   520                           ;main.c: 90: CountdownDisplay();
   521  00FC  20C3               	fcall	_CountdownDisplay
   522                           
   523                           ;main.c: 91: CheckSleep();
   524  00FD  207F               	fcall	_CheckSleep
   525  00FE                     l5082:	
   526                           
   527                           ;main.c: 92: }
   528                           ;main.c: 94: LedDisplay();
   529  00FE  219B               	fcall	_LedDisplay
   530                           
   531                           ;main.c: 95: MotoDisplay();
   532  00FF  2197               	fcall	_MotoDisplay
   533                           
   534                           ;main.c: 97: if (flag_is_blue_tooth_open || (BITS_DATA0.bit5) || (BITS_DATA0.bit6))
   535  0100  0825               	movf	_flag_is_blue_tooth_open,w
   536  0101  1903               	btfsc	3,2
   537  0102  1AA6               	btfsc	_BITS_DATA0,5
   538  0103  2906               	goto	l2908
   539  0104  1F26               	btfss	_BITS_DATA0,6
   540  0105  2909               	goto	l5092
   541  0106                     l2908:	
   542                           
   543                           ;main.c: 98: {
   544                           ;main.c: 99: flag_is_device_open = 1;
   545  0106  01A4               	clrf	_flag_is_device_open
   546  0107  0AA4               	incf	_flag_is_device_open,f
   547                           
   548                           ;main.c: 100: }
   549  0108  28F6               	goto	l2904
   550  0109                     l5092:	
   551                           
   552                           ;main.c: 101: else
   553                           ;main.c: 102: {
   554                           ;main.c: 103: flag_is_device_open = 0;
   555  0109  01A4               	clrf	_flag_is_device_open
   556  010A  28F6               	goto	l2904
   557  010B                     __end_of_main:	
   558                           
   559                           	psect	text1
   560  001A                     __ptext1:	
   561  001A                     _ScanKey:	
   562 ;; *************** function _ScanKey *****************
   563 ;; Defined at:
   564 ;;		line 11 in file "key.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 100/0
   575 ;;		On exit  : 100/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON BANK0_4   BANK0
   578 ;;      Params:         0       0       0
   579 ;;      Locals:         0       0       0
   580 ;;      Temps:          0       0       0
   581 ;;      Totals:         0       0       0
   582 ;;Total ram usage:        0 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; Hardware stack levels required when called:    2
   585 ;; This function calls:
   586 ;;		_LedSwitch
   587 ;;		_MotoSwitch
   588 ;;		_PowOff
   589 ;;		_PowOn
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           ;psect for function _ScanKey
   595                           
   596                           
   597                           ;key.c: 14: if (PORTB2 == 0 || PORTB4 == 0 || PORTB5 == 1)
   598                           ;incstack = 0
   599                           ; Regs used in _ScanKey: [wreg+status,2+status,0+pclath+cstack]
   600  001A  1906               	btfsc	6,2	;volatile
   601  001B  1E06               	btfss	6,4	;volatile
   602  001C  281F               	goto	l1762
   603  001D  1E86               	btfss	6,5	;volatile
   604  001E  2850               	goto	l5010
   605  001F                     l1762:	
   606                           
   607                           ;key.c: 15: {
   608                           ;key.c: 16: power_off_cnt = 0;
   609  001F  0191               	clrf	_power_off_cnt
   610  0020  0192               	clrf	_power_off_cnt+1
   611  0021  0193               	clrf	_power_off_cnt+2
   612  0022  0194               	clrf	_power_off_cnt+3
   613                           
   614                           ;key.c: 20: if (longpress_cnt < 0xffff)
   615  0023  0F15               	incfsz	_longpress_cnt,w
   616  0024  2828               	goto	l4984
   617  0025  0A16               	incf	_longpress_cnt+1,w
   618  0026  1903               	btfsc	3,2
   619  0027  282D               	goto	l4988
   620  0028                     l4984:	
   621                           
   622                           ;key.c: 21: {
   623                           ;key.c: 22: longpress_cnt++;
   624  0028  0A95               	incf	_longpress_cnt,f
   625  0029  1903               	btfsc	3,2
   626  002A  0A96               	incf	_longpress_cnt+1,f
   627                           
   628                           ;key.c: 24: SleepCount = 0;
   629  002B  0197               	clrf	_SleepCount
   630  002C  0198               	clrf	_SleepCount+1
   631  002D                     l4988:	
   632                           
   633                           ;key.c: 25: }
   634                           ;key.c: 27: if (longpress_cnt < 80)
   635  002D  3000               	movlw	0
   636  002E  0216               	subwf	_longpress_cnt+1,w
   637  002F  3050               	movlw	80
   638  0030  1903               	btfsc	3,2
   639  0031  0215               	subwf	_longpress_cnt,w
   640  0032  1803               	btfsc	3,0
   641  0033  2841               	goto	l1764
   642                           
   643                           ;key.c: 28: {
   644                           ;key.c: 30: if (PORTB2 == 0)
   645  0034  1906               	btfsc	6,2	;volatile
   646  0035  2839               	goto	l1765
   647                           
   648                           ;key.c: 31: {
   649                           ;key.c: 33: clink_event = 1;
   650  0036  019B               	clrf	_clink_event
   651  0037  0A9B               	incf	_clink_event,f
   652                           
   653                           ;key.c: 34: }
   654  0038  2841               	goto	l1764
   655  0039                     l1765:	
   656                           
   657                           ;key.c: 35: else if (PORTB4 == 0)
   658  0039  1A06               	btfsc	6,4	;volatile
   659  003A  283D               	goto	l1767
   660                           
   661                           ;key.c: 36: {
   662                           ;key.c: 38: clink_event = 2;
   663  003B  3002               	movlw	2
   664  003C  2840               	goto	L1
   665  003D                     l1767:	
   666                           
   667                           ;key.c: 39: }
   668                           ;key.c: 40: else if (PORTB5 == 1)
   669  003D  1E86               	btfss	6,5	;volatile
   670  003E  2841               	goto	l1764
   671                           
   672                           ;key.c: 41: {
   673                           ;key.c: 43: clink_event = 3;
   674  003F  3003               	movlw	3
   675  0040                     L1:	
   676  0040  009B               	movwf	_clink_event
   677  0041                     l1764:	
   678                           
   679                           ;key.c: 44: }
   680                           ;key.c: 45: }
   681                           ;key.c: 47: if (longpress_cnt >= 100)
   682  0041  3000               	movlw	0
   683  0042  0216               	subwf	_longpress_cnt+1,w
   684  0043  3064               	movlw	100
   685  0044  1903               	btfsc	3,2
   686  0045  0215               	subwf	_longpress_cnt,w
   687  0046  1C03               	btfss	3,0
   688  0047  0008               	return
   689                           
   690                           ;key.c: 48: {
   691                           ;key.c: 50: clink_event = 0;
   692  0048  019B               	clrf	_clink_event
   693                           
   694                           ;key.c: 52: if (PORTB5 == 1)
   695  0049  1E86               	btfss	6,5	;volatile
   696  004A  0008               	return
   697                           
   698                           ;key.c: 53: {
   699                           ;key.c: 54: long_f = 1;
   700  004B  019A               	clrf	_long_f
   701  004C  0A9A               	incf	_long_f,f
   702                           
   703                           ;key.c: 56: if (g_ucTimerWorkCount < 0xff)
   704  004D  0F1C               	incfsz	_g_ucTimerWorkCount,w
   705                           
   706                           ;key.c: 57: {
   707                           ;key.c: 58: g_ucTimerWorkCount++;
   708  004E  0A9C               	incf	_g_ucTimerWorkCount,f
   709                           
   710                           ;key.c: 59: }
   711                           ;key.c: 60: PowOn();
   712  004F  2986               	ljmp	l4964
   713  0050                     l5010:	
   714                           
   715                           ;key.c: 66: else
   716                           ;key.c: 67: {
   717                           ;key.c: 69: longpress_cnt = 0;
   718  0050  0195               	clrf	_longpress_cnt
   719  0051  0196               	clrf	_longpress_cnt+1
   720                           
   721                           ;key.c: 71: if (clink_event == 1)
   722  0052  0B1B               	decfsz	_clink_event,w
   723  0053  2857               	goto	l5018
   724                           
   725                           ;key.c: 72: {
   726                           ;key.c: 74: clink_event = 0;
   727  0054  019B               	clrf	_clink_event
   728                           
   729                           ;key.c: 76: MotoSwitch();
   730  0055  2168               	fcall	_MotoSwitch
   731                           
   732                           ;key.c: 77: }
   733  0056  2867               	goto	l5034
   734  0057                     l5018:	
   735                           
   736                           ;key.c: 78: else if (clink_event == 2)
   737  0057  3002               	movlw	2
   738  0058  061B               	xorwf	_clink_event,w
   739  0059  1D03               	btfss	3,2
   740  005A  285E               	goto	l5024
   741                           
   742                           ;key.c: 79: {
   743                           ;key.c: 80: clink_event = 0;
   744  005B  019B               	clrf	_clink_event
   745                           
   746                           ;key.c: 82: LedSwitch();
   747  005C  2172               	fcall	_LedSwitch
   748                           
   749                           ;key.c: 83: }
   750  005D  2867               	goto	l5034
   751  005E                     l5024:	
   752                           
   753                           ;key.c: 84: else if (clink_event == 3)
   754  005E  3003               	movlw	3
   755  005F  061B               	xorwf	_clink_event,w
   756  0060  1D03               	btfss	3,2
   757  0061  2867               	goto	l5034
   758                           
   759                           ;key.c: 85: {
   760                           ;key.c: 87: clink_event = 0;
   761  0062  019B               	clrf	_clink_event
   762                           
   763                           ;key.c: 89: PowOn();
   764  0063  2186               	fcall	_PowOn
   765                           
   766                           ;key.c: 91: g_ucTimerWorkCount++;
   767  0064  0A9C               	incf	_g_ucTimerWorkCount,f
   768                           
   769                           ;key.c: 92: holdOn_f = 1;
   770  0065  0199               	clrf	_holdOn_f
   771  0066  0A99               	incf	_holdOn_f,f
   772  0067                     l5034:	
   773                           
   774                           ;key.c: 93: }
   775                           ;key.c: 95: if (holdOn_f)
   776  0067  0819               	movf	_holdOn_f,w
   777  0068  1903               	btfsc	3,2
   778  0069  2873               	goto	l5044
   779                           
   780                           ;key.c: 96: {
   781                           ;key.c: 98: if (g_ucTimerWorkCount < 60)
   782  006A  303C               	movlw	60
   783  006B  021C               	subwf	_g_ucTimerWorkCount,w
   784  006C  1803               	btfsc	3,0
   785  006D  2870               	goto	l5040
   786                           
   787                           ;key.c: 99: {
   788                           ;key.c: 100: g_ucTimerWorkCount++;
   789  006E  0A9C               	incf	_g_ucTimerWorkCount,f
   790                           
   791                           ;key.c: 101: }
   792  006F  2873               	goto	l5044
   793  0070                     l5040:	
   794                           
   795                           ;key.c: 102: else
   796                           ;key.c: 103: {
   797                           ;key.c: 104: holdOn_f = 0;
   798  0070  0199               	clrf	_holdOn_f
   799                           
   800                           ;key.c: 105: g_ucTimerWorkCount = 0;
   801  0071  019C               	clrf	_g_ucTimerWorkCount
   802                           
   803                           ;key.c: 106: PowOff();
   804  0072  2193               	fcall	_PowOff
   805  0073                     l5044:	
   806                           
   807                           ;key.c: 107: }
   808                           ;key.c: 108: }
   809                           ;key.c: 110: if (long_f)
   810  0073  081A               	movf	_long_f,w
   811  0074  1903               	btfsc	3,2
   812  0075  0008               	return
   813                           
   814                           ;key.c: 111: {
   815                           ;key.c: 113: if (g_ucTimerWorkCount < 60)
   816  0076  303C               	movlw	60
   817  0077  021C               	subwf	_g_ucTimerWorkCount,w
   818  0078  1803               	btfsc	3,0
   819  0079  287C               	goto	l5050
   820                           
   821                           ;key.c: 114: {
   822                           ;key.c: 116: g_ucTimerWorkCount++;
   823  007A  0A9C               	incf	_g_ucTimerWorkCount,f
   824                           
   825                           ;key.c: 117: }
   826  007B  0008               	return
   827  007C                     l5050:	
   828                           
   829                           ;key.c: 118: else
   830                           ;key.c: 119: {
   831                           ;key.c: 121: long_f = 0;
   832  007C  019A               	clrf	_long_f
   833                           
   834                           ;key.c: 122: g_ucTimerWorkCount = 0;
   835  007D  019C               	clrf	_g_ucTimerWorkCount
   836                           
   837                           ;key.c: 123: PowOff();
   838  007E  2993               	ljmp	l4966
   839  007F                     __end_of_ScanKey:	
   840                           
   841                           	psect	text2
   842  0186                     __ptext2:	
   843  0186                     _PowOn:	
   844 ;; *************** function _PowOn *****************
   845 ;; Defined at:
   846 ;;		line 64 in file "led.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		None
   855 ;; Tracked objects:
   856 ;;		On entry : 100/0
   857 ;;		On exit  : 100/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMMON BANK0_4   BANK0
   860 ;;      Params:         0       0       0
   861 ;;      Locals:         0       0       0
   862 ;;      Temps:          0       0       0
   863 ;;      Totals:         0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    1
   867 ;; This function calls:
   868 ;;		Nothing
   869 ;; This function is called by:
   870 ;;		_ScanKey
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           ;psect for function _PowOn
   874                           
   875  0186                     l4964:	
   876                           
   877                           ;incstack = 0
   878                           ; Regs used in _PowOn: []
   879                           ;led.c: 88: ODCON &= ~(0x01 << 3);
   880  0186  118C               	bcf	12,3	;volatile
   881                           
   882                           ;led.c: 90: TRISB |= (0x08);
   883  0187  15C6               	bsf	70,3	;volatile
   884                           
   885                           ;led.c: 92: PDCON1 |= (0x01 << 3);
   886  0188  15D2               	bsf	82,3	;volatile
   887                           
   888                           ;led.c: 93: PHCON &= ~(0x01 << 3);
   889  0189  118D               	bcf	13,3	;volatile
   890                           
   891                           ;led.c: 95: flag_is_blue_tooth_open = 1;
   892  018A  01A5               	clrf	_flag_is_blue_tooth_open
   893  018B  0AA5               	incf	_flag_is_blue_tooth_open,f
   894  018C  0008               	return
   895  018D                     __end_of_PowOn:	
   896                           
   897                           	psect	text3
   898  0193                     __ptext3:	
   899  0193                     _PowOff:	
   900 ;; *************** function _PowOff *****************
   901 ;; Defined at:
   902 ;;		line 113 in file "led.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		status,2
   911 ;; Tracked objects:
   912 ;;		On entry : 100/0
   913 ;;		On exit  : 100/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON BANK0_4   BANK0
   916 ;;      Params:         0       0       0
   917 ;;      Locals:         0       0       0
   918 ;;      Temps:          0       0       0
   919 ;;      Totals:         0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    1
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_ScanKey
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           ;psect for function _PowOff
   930                           
   931  0193                     l4966:	
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _PowOff: [status,2]
   935                           ;led.c: 133: TRISB |= (0x08);
   936  0193  15C6               	bsf	70,3	;volatile
   937                           
   938                           ;led.c: 134: PHCON |= (0x08);
   939  0194  158D               	bsf	13,3	;volatile
   940                           
   941                           ;led.c: 149: flag_is_blue_tooth_open = 0;
   942  0195  01A5               	clrf	_flag_is_blue_tooth_open
   943  0196  0008               	return
   944  0197                     __end_of_PowOff:	
   945                           
   946                           	psect	text4
   947  0168                     __ptext4:	
   948  0168                     _MotoSwitch:	
   949 ;; *************** function _MotoSwitch *****************
   950 ;; Defined at:
   951 ;;		line 36 in file "led.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		status,0
   960 ;; Tracked objects:
   961 ;;		On entry : 100/0
   962 ;;		On exit  : 100/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON BANK0_4   BANK0
   965 ;;      Params:         0       0       0
   966 ;;      Locals:         0       0       0
   967 ;;      Temps:          0       0       0
   968 ;;      Totals:         0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_ScanKey
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           ;psect for function _MotoSwitch
   979                           
   980                           
   981                           ;led.c: 38: (BITS_DATA0.bit6) = !(BITS_DATA0.bit6);
   982                           ;incstack = 0
   983                           ; Regs used in _MotoSwitch: [status,0]
   984  0168  1003               	bcf	3,0
   985  0169  1F26               	btfss	_BITS_DATA0,6
   986  016A  1403               	bsf	3,0
   987  016B  1283               	bcf	3,5	;RP0=0, select bank0
   988  016C  1C03               	btfss	3,0
   989  016D  2970               	goto	L2
   990  016E  1726               	bsf	_BITS_DATA0,6
   991  016F  0008               	return
   992  0170                     L2:	
   993  0170  1326               	bcf	_BITS_DATA0,6
   994  0171  0008               	return
   995  0172                     __end_of_MotoSwitch:	
   996                           
   997                           	psect	text5
   998  0172                     __ptext5:	
   999  0172                     _LedSwitch:	
  1000 ;; *************** function _LedSwitch *****************
  1001 ;; Defined at:
  1002 ;;		line 6 in file "led.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		status,0
  1011 ;; Tracked objects:
  1012 ;;		On entry : 100/0
  1013 ;;		On exit  : 100/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON BANK0_4   BANK0
  1016 ;;      Params:         0       0       0
  1017 ;;      Locals:         0       0       0
  1018 ;;      Temps:          0       0       0
  1019 ;;      Totals:         0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_ScanKey
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           ;psect for function _LedSwitch
  1030                           
  1031                           
  1032                           ;led.c: 9: (BITS_DATA0.bit5) = !(BITS_DATA0.bit5);
  1033                           ;incstack = 0
  1034                           ; Regs used in _LedSwitch: [status,0]
  1035  0172  1003               	bcf	3,0
  1036  0173  1EA6               	btfss	_BITS_DATA0,5
  1037  0174  1403               	bsf	3,0
  1038  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0176  1C03               	btfss	3,0
  1040  0177  297A               	goto	L3
  1041  0178  16A6               	bsf	_BITS_DATA0,5
  1042  0179  0008               	return
  1043  017A                     L3:	
  1044  017A  12A6               	bcf	_BITS_DATA0,5
  1045  017B  0008               	return
  1046  017C                     __end_of_LedSwitch:	
  1047                           
  1048                           	psect	text6
  1049  0197                     __ptext6:	
  1050  0197                     _MotoDisplay:	
  1051 ;; *************** function _MotoDisplay *****************
  1052 ;; Defined at:
  1053 ;;		line 53 in file "led.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		status,2, status,0, pclath, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 100/0
  1064 ;;		On exit  : 100/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON BANK0_4   BANK0
  1067 ;;      Params:         0       0       0
  1068 ;;      Locals:         0       0       0
  1069 ;;      Temps:          0       0       0
  1070 ;;      Totals:         0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		_MotoOff
  1076 ;;		_MotoOn
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           ;psect for function _MotoDisplay
  1082                           
  1083                           
  1084                           ;led.c: 55: if ((BITS_DATA0.bit6) == 1)
  1085                           ;incstack = 0
  1086                           ; Regs used in _MotoDisplay: [status,2+status,0+pclath+cstack]
  1087  0197  1F26               	btfss	_BITS_DATA0,6
  1088  0198  299A               	goto	l4840
  1089                           
  1090                           ;led.c: 56: {
  1091                           ;led.c: 57: MotoOn();
  1092  0199  299F               	ljmp	l4724
  1093  019A                     l4840:	
  1094                           
  1095                           ;led.c: 58: }
  1096                           ;led.c: 59: else
  1097                           ;led.c: 60: {
  1098                           ;led.c: 61: MotoOff();
  1099  019A  29A2               	ljmp	l4726
  1100  019B                     __end_of_MotoDisplay:	
  1101                           
  1102                           	psect	text7
  1103  019F                     __ptext7:	
  1104  019F                     _MotoOn:	
  1105 ;; *************** function _MotoOn *****************
  1106 ;; Defined at:
  1107 ;;		line 41 in file "led.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		None
  1116 ;; Tracked objects:
  1117 ;;		On entry : 100/0
  1118 ;;		On exit  : 100/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON BANK0_4   BANK0
  1121 ;;      Params:         0       0       0
  1122 ;;      Locals:         0       0       0
  1123 ;;      Temps:          0       0       0
  1124 ;;      Totals:         0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    1
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_MotoDisplay
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           ;psect for function _MotoOn
  1135                           
  1136  019F                     l4724:	
  1137                           
  1138                           ;incstack = 0
  1139                           ; Regs used in _MotoOn: []
  1140                           ;led.c: 43: PORTB0 = 0;
  1141  019F  1006               	bcf	6,0	;volatile
  1142                           
  1143                           ;led.c: 44: MODSEL = 1;
  1144  01A0  17D5               	bsf	85,7	;volatile
  1145  01A1  0008               	return
  1146  01A2                     __end_of_MotoOn:	
  1147                           
  1148                           	psect	text8
  1149  01A2                     __ptext8:	
  1150  01A2                     _MotoOff:	
  1151 ;; *************** function _MotoOff *****************
  1152 ;; Defined at:
  1153 ;;		line 47 in file "led.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;		None
  1156 ;; Auto vars:     Size  Location     Type
  1157 ;;		None
  1158 ;; Return value:  Size  Location     Type
  1159 ;;                  1    wreg      void 
  1160 ;; Registers used:
  1161 ;;		None
  1162 ;; Tracked objects:
  1163 ;;		On entry : 100/0
  1164 ;;		On exit  : 100/0
  1165 ;;		Unchanged: 0/0
  1166 ;; Data sizes:     COMMON BANK0_4   BANK0
  1167 ;;      Params:         0       0       0
  1168 ;;      Locals:         0       0       0
  1169 ;;      Temps:          0       0       0
  1170 ;;      Totals:         0       0       0
  1171 ;;Total ram usage:        0 bytes
  1172 ;; Hardware stack levels used:    1
  1173 ;; Hardware stack levels required when called:    1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_MotoDisplay
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           ;psect for function _MotoOff
  1181                           
  1182  01A2                     l4726:	
  1183                           
  1184                           ;incstack = 0
  1185                           ; Regs used in _MotoOff: []
  1186                           ;led.c: 49: PORTB0 = 1;
  1187  01A2  1406               	bsf	6,0	;volatile
  1188                           
  1189                           ;led.c: 50: MODSEL = 1;
  1190  01A3  17D5               	bsf	85,7	;volatile
  1191  01A4  0008               	return
  1192  01A5                     __end_of_MotoOff:	
  1193                           
  1194                           	psect	text9
  1195  019B                     __ptext9:	
  1196  019B                     _LedDisplay:	
  1197 ;; *************** function _LedDisplay *****************
  1198 ;; Defined at:
  1199 ;;		line 12 in file "led.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		status,2, status,0, pclath, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 100/0
  1210 ;;		On exit  : 100/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON BANK0_4   BANK0
  1213 ;;      Params:         0       0       0
  1214 ;;      Locals:         0       0       0
  1215 ;;      Temps:          0       0       0
  1216 ;;      Totals:         0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; Hardware stack levels required when called:    2
  1220 ;; This function calls:
  1221 ;;		_LedOff
  1222 ;;		_LedOn
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           ;psect for function _LedDisplay
  1228                           
  1229                           
  1230                           ;led.c: 14: if ((BITS_DATA0.bit5) == 1)
  1231                           ;incstack = 0
  1232                           ; Regs used in _LedDisplay: [status,2+status,0+pclath+cstack]
  1233  019B  1EA6               	btfss	_BITS_DATA0,5
  1234  019C  299E               	goto	l4834
  1235                           
  1236                           ;led.c: 15: {
  1237                           ;led.c: 16: LedOn();
  1238  019D  29A5               	ljmp	l4720
  1239  019E                     l4834:	
  1240                           
  1241                           ;led.c: 17: }
  1242                           ;led.c: 18: else
  1243                           ;led.c: 19: {
  1244                           ;led.c: 20: LedOff();
  1245  019E  29A8               	ljmp	l4722
  1246  019F                     __end_of_LedDisplay:	
  1247                           
  1248                           	psect	text10
  1249  01A5                     __ptext10:	
  1250  01A5                     _LedOn:	
  1251 ;; *************** function _LedOn *****************
  1252 ;; Defined at:
  1253 ;;		line 24 in file "led.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		None
  1262 ;; Tracked objects:
  1263 ;;		On entry : 100/0
  1264 ;;		On exit  : 100/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON BANK0_4   BANK0
  1267 ;;      Params:         0       0       0
  1268 ;;      Locals:         0       0       0
  1269 ;;      Temps:          0       0       0
  1270 ;;      Totals:         0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    1
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_LedDisplay
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           ;psect for function _LedOn
  1281                           
  1282  01A5                     l4720:	
  1283                           
  1284                           ;incstack = 0
  1285                           ; Regs used in _LedOn: []
  1286                           ;led.c: 26: PORTB1 = 0;
  1287  01A5  1086               	bcf	6,1	;volatile
  1288                           
  1289                           ;led.c: 27: MODSEL = 1;
  1290  01A6  17D5               	bsf	85,7	;volatile
  1291  01A7  0008               	return
  1292  01A8                     __end_of_LedOn:	
  1293                           
  1294                           	psect	text11
  1295  01A8                     __ptext11:	
  1296  01A8                     _LedOff:	
  1297 ;; *************** function _LedOff *****************
  1298 ;; Defined at:
  1299 ;;		line 30 in file "led.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		None
  1308 ;; Tracked objects:
  1309 ;;		On entry : 100/0
  1310 ;;		On exit  : 100/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON BANK0_4   BANK0
  1313 ;;      Params:         0       0       0
  1314 ;;      Locals:         0       0       0
  1315 ;;      Temps:          0       0       0
  1316 ;;      Totals:         0       0       0
  1317 ;;Total ram usage:        0 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_LedDisplay
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           ;psect for function _LedOff
  1327                           
  1328  01A8                     l4722:	
  1329                           
  1330                           ;incstack = 0
  1331                           ; Regs used in _LedOff: []
  1332                           ;led.c: 32: PORTB1 = 1;
  1333  01A8  1486               	bsf	6,1	;volatile
  1334                           
  1335                           ;led.c: 33: MODSEL = 1;
  1336  01A9  17D5               	bsf	85,7	;volatile
  1337  01AA  0008               	return
  1338  01AB                     __end_of_LedOff:	
  1339                           
  1340                           	psect	text12
  1341  017C                     __ptext12:	
  1342  017C                     _InitSystem:	
  1343 ;; *************** function _InitSystem *****************
  1344 ;; Defined at:
  1345 ;;		line 81 in file "init.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 100/0
  1356 ;;		On exit  : 100/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON BANK0_4   BANK0
  1359 ;;      Params:         0       0       0
  1360 ;;      Locals:         0       0       0
  1361 ;;      Temps:          0       0       0
  1362 ;;      Totals:         0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           ;psect for function _InitSystem
  1373                           
  1374                           
  1375                           ;init.c: 83: OSCCON = 0;
  1376                           ;incstack = 0
  1377                           ; Regs used in _InitSystem: [wreg+status,2+status,0]
  1378  017C  01D0               	clrf	80	;volatile
  1379                           
  1380                           ;init.c: 84: T0 = 0xCE;
  1381  017D  30CE               	movlw	206
  1382  017E  0081               	movwf	1	;volatile
  1383                           
  1384                           ;init.c: 86: OPTION = 0x00;
  1385  017F  01C1               	clrf	65	;volatile
  1386                           
  1387                           ;init.c: 87: PCON |= 0x90;
  1388  0180  3090               	movlw	144
  1389  0181  0488               	iorwf	8,f	;volatile
  1390                           
  1391                           ;init.c: 89: CMPCR = 0x00;
  1392  0182  01D1               	clrf	81	;volatile
  1393                           
  1394                           ;init.c: 90: INTFLAG &= 0xFE;
  1395  0183  100F               	bcf	15,0	;volatile
  1396                           
  1397                           ;init.c: 91: CMPCR |= 0X10;
  1398  0184  1651               	bsf	81,4	;volatile
  1399  0185  0008               	return
  1400  0186                     __end_of_InitSystem:	
  1401                           
  1402                           	psect	text13
  1403  018D                     __ptext13:	
  1404  018D                     _InitRam:	
  1405 ;; *************** function _InitRam *****************
  1406 ;; Defined at:
  1407 ;;		line 102 in file "init.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      void 
  1414 ;; Registers used:
  1415 ;;		status,2
  1416 ;; Tracked objects:
  1417 ;;		On entry : 100/0
  1418 ;;		On exit  : 100/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON BANK0_4   BANK0
  1421 ;;      Params:         0       0       0
  1422 ;;      Locals:         0       0       0
  1423 ;;      Temps:          0       0       0
  1424 ;;      Totals:         0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    1
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           ;psect for function _InitRam
  1435                           
  1436                           
  1437                           ;init.c: 104: (BITS_DATA0.bit0) = 0;
  1438                           ;incstack = 0
  1439                           ; Regs used in _InitRam: [status,2]
  1440  018D  1026               	bcf	_BITS_DATA0,0
  1441                           
  1442                           ;init.c: 105: (BITS_DATA0.bit5) = 0;
  1443  018E  12A6               	bcf	_BITS_DATA0,5
  1444                           
  1445                           ;init.c: 106: (BITS_DATA0.bit6) = 0;
  1446  018F  1326               	bcf	_BITS_DATA0,6
  1447                           
  1448                           ;init.c: 109: SleepCount = 0;
  1449  0190  0197               	clrf	_SleepCount
  1450  0191  0198               	clrf	_SleepCount+1
  1451  0192  0008               	return
  1452  0193                     __end_of_InitRam:	
  1453                           
  1454                           	psect	text14
  1455  00C3                     __ptext14:	
  1456  00C3                     _CountdownDisplay:	
  1457 ;; *************** function _CountdownDisplay *****************
  1458 ;; Defined at:
  1459 ;;		line 161 in file "led.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2, status,0, pclath, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 100/0
  1470 ;;		On exit  : 100/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON BANK0_4   BANK0
  1473 ;;      Params:         0       0       0
  1474 ;;      Locals:         0       0       0
  1475 ;;      Temps:          0       0       0
  1476 ;;      Totals:         0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    3
  1480 ;; This function calls:
  1481 ;;		_bt_off
  1482 ;; This function is called by:
  1483 ;;		_main
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           ;psect for function _CountdownDisplay
  1487                           
  1488                           
  1489                           ;led.c: 165: if (flag_is_device_open)
  1490                           ;incstack = 0
  1491                           ; Regs used in _CountdownDisplay: [wreg+status,2+status,0+pclath+cstack]
  1492  00C3  0824               	movf	_flag_is_device_open,w
  1493  00C4  1903               	btfsc	3,2
  1494  00C5  28E5               	goto	l2177
  1495                           
  1496                           ;led.c: 166: {
  1497                           ;led.c: 168: power_off_cnt++;
  1498  00C6  0A91               	incf	_power_off_cnt,f
  1499  00C7  1903               	btfsc	3,2
  1500  00C8  0A92               	incf	_power_off_cnt+1,f
  1501  00C9  1903               	btfsc	3,2
  1502  00CA  0A93               	incf	_power_off_cnt+2,f
  1503  00CB  1903               	btfsc	3,2
  1504  00CC  0A94               	incf	_power_off_cnt+3,f
  1505                           
  1506                           ;led.c: 169: if (power_off_cnt >= ((unsigned long)120000))
  1507  00CD  0814               	movf	_power_off_cnt+3,w
  1508  00CE  1D03               	btfss	3,2
  1509  00CF  28DC               	goto	l5060
  1510  00D0  3001               	movlw	1
  1511  00D1  0213               	subwf	_power_off_cnt+2,w
  1512  00D2  1D03               	btfss	3,2
  1513  00D3  28DA               	goto	u783
  1514  00D4  30D4               	movlw	212
  1515  00D5  0212               	subwf	_power_off_cnt+1,w
  1516  00D6  1D03               	btfss	3,2
  1517  00D7  28DA               	goto	u783
  1518  00D8  30C0               	movlw	192
  1519  00D9  0211               	subwf	_power_off_cnt,w
  1520  00DA                     u783:	
  1521  00DA  1C03               	btfss	3,0
  1522  00DB  0008               	return
  1523  00DC                     l5060:	
  1524                           
  1525                           ;led.c: 170: {
  1526                           ;led.c: 171: power_off_cnt = 0;
  1527  00DC  0191               	clrf	_power_off_cnt
  1528  00DD  0192               	clrf	_power_off_cnt+1
  1529  00DE  0193               	clrf	_power_off_cnt+2
  1530  00DF  0194               	clrf	_power_off_cnt+3
  1531                           
  1532                           ;led.c: 172: (BITS_DATA0.bit5) = 0;
  1533  00E0  12A6               	bcf	_BITS_DATA0,5
  1534                           
  1535                           ;led.c: 173: (BITS_DATA0.bit6) = 0;
  1536  00E1  1326               	bcf	_BITS_DATA0,6
  1537                           
  1538                           ;led.c: 175: bt_off();
  1539  00E2  215C               	fcall	_bt_off
  1540                           
  1541                           ;led.c: 177: flag_is_device_open = 0;
  1542  00E3  01A4               	clrf	_flag_is_device_open
  1543  00E4  0008               	return
  1544  00E5                     l2177:	
  1545                           
  1546                           ;led.c: 180: else
  1547                           ;led.c: 181: {
  1548                           ;led.c: 184: power_off_cnt = 0;
  1549  00E5  0191               	clrf	_power_off_cnt
  1550  00E6  0192               	clrf	_power_off_cnt+1
  1551  00E7  0193               	clrf	_power_off_cnt+2
  1552  00E8  0194               	clrf	_power_off_cnt+3
  1553  00E9  0008               	return
  1554  00EA                     __end_of_CountdownDisplay:	
  1555                           
  1556                           	psect	text15
  1557  015C                     __ptext15:	
  1558  015C                     _bt_off:	
  1559 ;; *************** function _bt_off *****************
  1560 ;; Defined at:
  1561 ;;		line 98 in file "led.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;		None
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;		None
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0, pclath, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 100/0
  1572 ;;		On exit  : 100/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMMON BANK0_4   BANK0
  1575 ;;      Params:         0       0       0
  1576 ;;      Locals:         0       0       0
  1577 ;;      Temps:          0       0       0
  1578 ;;      Totals:         0       0       0
  1579 ;;Total ram usage:        0 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    2
  1582 ;; This function calls:
  1583 ;;		_delay_ms
  1584 ;; This function is called by:
  1585 ;;		_CountdownDisplay
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           ;psect for function _bt_off
  1589                           
  1590                           
  1591                           ;led.c: 100: PHCON |= (0x08);
  1592                           ;incstack = 0
  1593                           ; Regs used in _bt_off: [wreg+status,2+status,0+pclath+cstack]
  1594  015C  158D               	bsf	13,3	;volatile
  1595                           
  1596                           ;led.c: 101: PDCON1 |= (0x01 << 3);
  1597  015D  15D2               	bsf	82,3	;volatile
  1598                           
  1599                           ;led.c: 103: TRISB &= (0xF7);
  1600  015E  11C6               	bcf	70,3	;volatile
  1601                           
  1602                           ;led.c: 104: ODCON |= (0x08);
  1603  015F  158C               	bsf	12,3	;volatile
  1604                           
  1605                           ;led.c: 105: PORTB3 = 0;
  1606  0160  1186               	bcf	6,3	;volatile
  1607                           
  1608                           ;led.c: 107: extern void delay_ms(WORD xms);
  1609                           ;led.c: 108: delay_ms((WORD)500);
  1610  0161  30F4               	movlw	244
  1611  0162  00A0               	movwf	delay_ms@xms
  1612  0163  3001               	movlw	1
  1613  0164  00A1               	movwf	delay_ms@xms+1
  1614  0165  2129               	fcall	_delay_ms
  1615                           
  1616                           ;led.c: 110: flag_is_blue_tooth_open = 0;
  1617  0166  01A5               	clrf	_flag_is_blue_tooth_open
  1618  0167  0008               	return
  1619  0168                     __end_of_bt_off:	
  1620                           
  1621                           	psect	text16
  1622  0129                     __ptext16:	
  1623  0129                     _delay_ms:	
  1624 ;; *************** function _delay_ms *****************
  1625 ;; Defined at:
  1626 ;;		line 23 in file "main.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  xms             2    2[BANK0_] unsigned short 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  i               2    4[BANK0_] unsigned short 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 100/0
  1637 ;;		On exit  : 100/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON BANK0_4   BANK0
  1640 ;;      Params:         0       2       0
  1641 ;;      Locals:         0       2       0
  1642 ;;      Temps:          0       0       0
  1643 ;;      Totals:         0       4       0
  1644 ;;Total ram usage:        4 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_bt_off
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           ;psect for function _delay_ms
  1655                           
  1656  0129                     l4658:	
  1657                           
  1658                           ;main.c: 25: while (xms)
  1659                           ;incstack = 0
  1660                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  1661  0129  0820               	movf	delay_ms@xms,w
  1662  012A  0421               	iorwf	delay_ms@xms+1,w
  1663  012B  1903               	btfsc	3,2
  1664  012C  0008               	return
  1665                           
  1666                           ;main.c: 26: {
  1667                           ;main.c: 27: WORD i = 329;
  1668  012D  3049               	movlw	73
  1669  012E  00A2               	movwf	delay_ms@i
  1670  012F  3001               	movlw	1
  1671  0130  00A3               	movwf	delay_ms@i+1
  1672  0131                     l4654:	
  1673                           
  1674                           ;main.c: 29: while (i)
  1675  0131  0822               	movf	delay_ms@i,w
  1676  0132  0423               	iorwf	delay_ms@i+1,w
  1677  0133  1903               	btfsc	3,2
  1678  0134  293C               	goto	l2897
  1679  0135  0000               	nop	; ;# 
  1680                           
  1681                           ;main.c: 37: i--;
  1682  0136  3001               	movlw	1
  1683  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0138  02A2               	subwf	delay_ms@i,f
  1685  0139  1C03               	btfss	3,0
  1686  013A  03A3               	decf	delay_ms@i+1,f
  1687  013B  2931               	goto	l4654
  1688  013C                     l2897:	
  1689  013C  0064               	clrwdt	; ;# 
  1690                           
  1691                           ;main.c: 44: xms--;
  1692  013D  3001               	movlw	1
  1693  013E  1283               	bcf	3,5	;RP0=0, select bank0
  1694  013F  02A0               	subwf	delay_ms@xms,f
  1695  0140  3000               	movlw	0
  1696  0141  1C03               	btfss	3,0
  1697  0142  03A1               	decf	delay_ms@xms+1,f
  1698  0143  02A1               	subwf	delay_ms@xms+1,f
  1699  0144  2929               	goto	l4658
  1700  0145                     __end_of_delay_ms:	
  1701                           
  1702                           	psect	text17
  1703  007F                     __ptext17:	
  1704  007F                     _CheckSleep:	
  1705 ;; *************** function _CheckSleep *****************
  1706 ;; Defined at:
  1707 ;;		line 34 in file "temp.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  1    wreg      void 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 100/0
  1718 ;;		On exit  : 100/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON BANK0_4   BANK0
  1721 ;;      Params:         0       0       0
  1722 ;;      Locals:         0       0       0
  1723 ;;      Temps:          0       0       0
  1724 ;;      Totals:         0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    2
  1728 ;; This function calls:
  1729 ;;		_InitPort
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           ;psect for function _CheckSleep
  1735                           
  1736                           
  1737                           ;temp.c: 37: if (flag_is_device_open)
  1738                           ;incstack = 0
  1739                           ; Regs used in _CheckSleep: [wreg+status,2+status,0+pclath+cstack]
  1740  007F  0824               	movf	_flag_is_device_open,w
  1741  0080  1903               	btfsc	3,2
  1742  0081  2884               	goto	l4858
  1743                           
  1744                           ;temp.c: 38: {
  1745                           ;temp.c: 39: SleepCount = 0;
  1746  0082  0197               	clrf	_SleepCount
  1747  0083  0198               	clrf	_SleepCount+1
  1748  0084                     l4858:	
  1749                           
  1750                           ;temp.c: 40: }
  1751                           ;temp.c: 44: if(SleepCount < 1000)
  1752  0084  3003               	movlw	3
  1753  0085  0218               	subwf	_SleepCount+1,w
  1754  0086  30E8               	movlw	232
  1755  0087  1903               	btfsc	3,2
  1756  0088  0217               	subwf	_SleepCount,w
  1757  0089  1803               	btfsc	3,0
  1758  008A  288F               	goto	l4864
  1759                           
  1760                           ;temp.c: 46: {
  1761                           ;temp.c: 47: SleepCount++;
  1762  008B  0A97               	incf	_SleepCount,f
  1763  008C  1903               	btfsc	3,2
  1764  008D  0A98               	incf	_SleepCount+1,f
  1765  008E  0008               	return
  1766  008F                     l4864:	
  1767                           
  1768                           ;temp.c: 49: }
  1769                           ;temp.c: 51: RAMP = 0;
  1770  008F  01D5               	clrf	85	;volatile
  1771                           
  1772                           ;temp.c: 52: T1CON = 0;
  1773  0090  01CC               	clrf	76	;volatile
  1774                           
  1775                           ;temp.c: 53: CHARGE1 = 0;
  1776  0091  01D4               	clrf	84	;volatile
  1777                           
  1778                           ;temp.c: 54: CHARGE0 = 0;
  1779  0092  01D3               	clrf	83	;volatile
  1780                           
  1781                           ;temp.c: 55: PCON = 0;
  1782  0093  0188               	clrf	8	;volatile
  1783                           
  1784                           ;temp.c: 56: CMPCR = 0;
  1785  0094  01D1               	clrf	81	;volatile
  1786                           
  1787                           ;temp.c: 59: LVDM = 0;
  1788  0095  1251               	bcf	81,4	;volatile
  1789                           
  1790                           ;temp.c: 60: CMPEN = 0;
  1791  0096  1008               	bcf	8,0	;volatile
  1792                           
  1793                           ;temp.c: 61: CMPOF = 0;
  1794  0097  1288               	bcf	8,5	;volatile
  1795                           
  1796                           ;temp.c: 62: TEMPEN = 0;
  1797  0098  1354               	bcf	84,6	;volatile
  1798                           
  1799                           ;temp.c: 63: TMPF = 0;
  1800  0099  120F               	bcf	15,4	;volatile
  1801                           
  1802                           ;temp.c: 64: MODSEL = 0;
  1803  009A  13D5               	bcf	85,7	;volatile
  1804                           
  1805                           ;temp.c: 66: WDTEN = 0;
  1806  009B  1388               	bcf	8,7	;volatile
  1807                           
  1808                           ;temp.c: 67: T0IE = 0;
  1809  009C  100E               	bcf	14,0	;volatile
  1810                           
  1811                           ;temp.c: 69: INTECON = 0;
  1812  009D  018E               	clrf	14	;volatile
  1813                           
  1814                           ;temp.c: 71: PORTB = 0;
  1815  009E  0186               	clrf	6	;volatile
  1816                           
  1817                           ;temp.c: 73: TRISB = 0xff;
  1818  009F  30FF               	movlw	255
  1819  00A0  00C6               	movwf	70	;volatile
  1820  00A1  0084               	movwf	4
  1821                           
  1822                           ;temp.c: 77: PDCON = 0xFF;
  1823  00A2  008B               	movwf	11	;volatile
  1824                           
  1825                           ;temp.c: 78: PDCON1 = 0xFF;
  1826  00A3  00D2               	movwf	82	;volatile
  1827                           
  1828                           ;temp.c: 81: PHCON = 0XFF;
  1829  00A4  008D               	movwf	13	;volatile
  1830                           
  1831                           ;temp.c: 83: PHCON &= (0xFB);
  1832  00A5  110D               	bcf	13,2	;volatile
  1833                           
  1834                           ;temp.c: 84: PHCON &= (0xEF);
  1835  00A6  120D               	bcf	13,4	;volatile
  1836                           
  1837                           ;temp.c: 87: IOCB = 0X00;
  1838  00A7  0189               	clrf	9	;volatile
  1839                           
  1840                           ;temp.c: 88: IOCB |= (0x04);
  1841  00A8  1509               	bsf	9,2	;volatile
  1842                           
  1843                           ;temp.c: 89: IOCB |= (0x10);
  1844  00A9  1609               	bsf	9,4	;volatile
  1845                           
  1846                           ;temp.c: 90: IOCB |= (0x01 << 5);
  1847  00AA  1689               	bsf	9,5	;volatile
  1848                           
  1849                           ;temp.c: 98: PBIF = 0;
  1850  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1851  00AC  108F               	bcf	15,1	;volatile
  1852                           
  1853                           ;temp.c: 99: PBIE = 1;
  1854  00AD  148E               	bsf	14,1	;volatile
  1855                           
  1856                           ;temp.c: 100: GIE = 0;
  1857  00AE  138E               	bcf	14,7	;volatile
  1858  00AF  0063               	sleep	;# 
  1859  00B0  0000               	nop	;# 
  1860  00B1  0000               	nop	;# 
  1861  00B2  0000               	nop	;# 
  1862  00B3  0000               	nop	;# 
  1863  00B4  0806               	movf	6,w	;# 
  1864                           
  1865                           ;temp.c: 114: PBIE = 0;
  1866  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1867  00B6  108E               	bcf	14,1	;volatile
  1868                           
  1869                           ;temp.c: 115: IOCB = 0;
  1870  00B7  0189               	clrf	9	;volatile
  1871                           
  1872                           ;temp.c: 116: LVDM = 1;
  1873  00B8  1651               	bsf	81,4	;volatile
  1874  00B9  0064               	clrwdt	; ;# 
  1875                           
  1876                           ;temp.c: 121: WDTEN = 1;
  1877  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1878  00BB  1788               	bsf	8,7	;volatile
  1879                           
  1880                           ;temp.c: 122: GIE = 1;
  1881  00BC  178E               	bsf	14,7	;volatile
  1882                           
  1883                           ;temp.c: 123: T0IE = 1;
  1884  00BD  140E               	bsf	14,0	;volatile
  1885                           
  1886                           ;temp.c: 125: InitPort();
  1887  00BE  210B               	fcall	_InitPort
  1888                           
  1889                           ;temp.c: 145: MODSEL = 1;
  1890  00BF  17D5               	bsf	85,7	;volatile
  1891                           
  1892                           ;temp.c: 146: SleepCount = 0;
  1893  00C0  0197               	clrf	_SleepCount
  1894  00C1  0198               	clrf	_SleepCount+1
  1895  00C2  0008               	return
  1896  00C3                     __end_of_CheckSleep:	
  1897                           
  1898                           	psect	text18
  1899  010B                     __ptext18:	
  1900  010B                     _InitPort:	
  1901 ;; *************** function _InitPort *****************
  1902 ;; Defined at:
  1903 ;;		line 8 in file "init.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 100/0
  1914 ;;		On exit  : 100/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON BANK0_4   BANK0
  1917 ;;      Params:         0       0       0
  1918 ;;      Locals:         0       0       0
  1919 ;;      Temps:          0       0       0
  1920 ;;      Totals:         0       0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    1
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;;		_CheckSleep
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           ;psect for function _InitPort
  1932                           
  1933                           
  1934                           ;init.c: 11: AUXR = 0;
  1935                           ;incstack = 0
  1936                           ; Regs used in _InitPort: [wreg+status,2]
  1937  010B  01D9               	clrf	89	;volatile
  1938                           
  1939                           ;init.c: 13: PORTB = 0;
  1940  010C  0186               	clrf	6	;volatile
  1941                           
  1942                           ;init.c: 21: TRISB = 0;
  1943  010D  01C6               	clrf	70	;volatile
  1944                           
  1945                           ;init.c: 22: TRISB |= (0x04);
  1946  010E  1546               	bsf	70,2	;volatile
  1947                           
  1948                           ;init.c: 23: TRISB |= (0x10);
  1949  010F  1646               	bsf	70,4	;volatile
  1950                           
  1951                           ;init.c: 24: TRISB |= (0x20);
  1952  0110  16C6               	bsf	70,5	;volatile
  1953                           
  1954                           ;init.c: 26: TRISB |= (0x08);
  1955  0111  15C6               	bsf	70,3	;volatile
  1956                           
  1957                           ;init.c: 33: PHCON = 0XFF;
  1958  0112  30FF               	movlw	255
  1959  0113  008D               	movwf	13	;volatile
  1960                           
  1961                           ;init.c: 35: PHCON &= (0xFE);
  1962  0114  100D               	bcf	13,0	;volatile
  1963                           
  1964                           ;init.c: 36: PHCON &= (0xFD);
  1965  0115  108D               	bcf	13,1	;volatile
  1966                           
  1967                           ;init.c: 38: PHCON &= (0xFB);
  1968  0116  110D               	bcf	13,2	;volatile
  1969                           
  1970                           ;init.c: 39: PHCON &= (0xEF);
  1971  0117  120D               	bcf	13,4	;volatile
  1972                           
  1973                           ;init.c: 45: PDCON = 0xFF;
  1974  0118  30FF               	movlw	255
  1975  0119  008B               	movwf	11	;volatile
  1976                           
  1977                           ;init.c: 46: PDCON1 = 0xFF;
  1978  011A  00D2               	movwf	82	;volatile
  1979                           
  1980                           ;init.c: 48: PDCON1 &= ~(0x01 << 5);
  1981  011B  12D2               	bcf	82,5	;volatile
  1982                           
  1983                           ;init.c: 53: IOCB = 0X00;
  1984  011C  0189               	clrf	9	;volatile
  1985                           
  1986                           ;init.c: 54: IOCB |= (0x04);
  1987  011D  1509               	bsf	9,2	;volatile
  1988                           
  1989                           ;init.c: 55: IOCB |= (0x10);
  1990  011E  1609               	bsf	9,4	;volatile
  1991                           
  1992                           ;init.c: 56: IOCB |= (0x20);
  1993  011F  1689               	bsf	9,5	;volatile
  1994                           
  1995                           ;init.c: 57: PBIE = 0;
  1996  0120  108E               	bcf	14,1	;volatile
  1997                           
  1998                           ;init.c: 63: ODCON = 0;
  1999  0121  018C               	clrf	12	;volatile
  2000                           
  2001                           ;init.c: 64: ODCON |= (0x01);
  2002  0122  140C               	bsf	12,0	;volatile
  2003                           
  2004                           ;init.c: 65: ODCON |= (0x02);
  2005  0123  148C               	bsf	12,1	;volatile
  2006                           
  2007                           ;init.c: 73: MODSEL = 1;
  2008  0124  17D5               	bsf	85,7	;volatile
  2009                           
  2010                           ;init.c: 74: PORTB1 = 1;
  2011  0125  1486               	bsf	6,1	;volatile
  2012                           
  2013                           ;init.c: 75: PORTB0 = 1;
  2014  0126  1406               	bsf	6,0	;volatile
  2015                           
  2016                           ;init.c: 76: PORTB3 = 0;
  2017  0127  1186               	bcf	6,3	;volatile
  2018  0128  0008               	return
  2019  0129                     __end_of_InitPort:	
  2020                           
  2021                           	psect	text19
  2022  0145                     __ptext19:	
  2023  0145                     _interrupt_handle:	
  2024 ;; *************** function _interrupt_handle *****************
  2025 ;; Defined at:
  2026 ;;		line 9 in file "interrupt.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      void 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 100/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON BANK0_4   BANK0
  2040 ;;      Params:         0       0       0
  2041 ;;      Locals:         0       0       0
  2042 ;;      Temps:          0       2       0
  2043 ;;      Totals:         0       2       0
  2044 ;;Total ram usage:        2 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		Interrupt level 1
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           ;psect for function _interrupt_handle
  2053                           
  2054                           
  2055                           ;interrupt.c: 11: if (PBIF)
  2056  0145  188F               	btfsc	15,1	;volatile
  2057                           
  2058                           ;interrupt.c: 12: {
  2059                           ;interrupt.c: 13: PBIF = 0;
  2060  0146  108F               	bcf	15,1	;volatile
  2061                           
  2062                           ;interrupt.c: 15: }
  2063                           ;interrupt.c: 16: if (T0IF)
  2064  0147  1C0F               	btfss	15,0	;volatile
  2065  0148  294C               	goto	i1l4930
  2066                           
  2067                           ;interrupt.c: 17: {
  2068                           ;interrupt.c: 18: T0IF = 0;
  2069  0149  100F               	bcf	15,0	;volatile
  2070                           
  2071                           ;interrupt.c: 19: T0 = 217;
  2072  014A  30D9               	movlw	217
  2073  014B  0081               	movwf	1	;volatile
  2074  014C                     i1l4930:	
  2075  014C  30C8               	movlw	200
  2076                           
  2077                           ;interrupt.c: 21: }
  2078                           ;interrupt.c: 23: g_ucTimer10msCount++;
  2079  014D  0A9D               	incf	_g_ucTimer10msCount,f
  2080                           
  2081                           ;interrupt.c: 29: if ((200) == g_ucTimer10msCount)
  2082  014E  061D               	xorwf	_g_ucTimer10msCount,w
  2083  014F  1D03               	btfss	3,2
  2084  0150  2953               	goto	i1l1399
  2085                           
  2086                           ;interrupt.c: 30: {
  2087                           ;interrupt.c: 31: g_ucTimer10msCount = 0;
  2088  0151  019D               	clrf	_g_ucTimer10msCount
  2089                           
  2090                           ;interrupt.c: 32: (BITS_DATA0.bit0) = 1;
  2091  0152  1426               	bsf	_BITS_DATA0,0
  2092  0153                     i1l1399:	
  2093  0153  081F               	movf	??_interrupt_handle+1,w
  2094  0154  008A               	movwf	10
  2095  0155  0810               	movf	_itemp,w
  2096  0156  0087               	movwf	7
  2097  0157  0E1E               	swapf	??_interrupt_handle^0,w
  2098  0158  0083               	movwf	3
  2099  0159  0EEE               	swapf	110,f
  2100  015A  0E6E               	swapf	110,w
  2101  015B  0009               	retfie
  2102  015C                     __end_of_interrupt_handle:	
  2103  006E                     btemp	set	110	;btemp
  2104  006E                     wtemp0	set	110
  2105                           
  2106                           	psect	intentry
  2107  0008                     __pintentry:	
  2108  0008                     interrupt_function:	
  2109                           ;incstack = 0
  2110                           ; Regs used in _interrupt_handle: [wreg+status,2+status,0]
  2111                           
  2112  006E                     saved_w	set	110
  2113  0008  1A83               	btfsc	3,5
  2114  0009  280C               	goto	SAVE_BANK1
  2115  000A  00EE               	movwf	110
  2116  000B  280F               	goto	EXIT_BANK_SAVE
  2117  000C                     SAVE_BANK1:	
  2118  000C  1283               	bcf	3,5
  2119  000D  00EE               	movwf	110
  2120  000E  1683               	bsf	3,5
  2121  000F                     EXIT_BANK_SAVE:	
  2122  000F  0E03               	swapf	3,w
  2123  0010  1283               	bcf	3,5	;RP0=0, select bank0
  2124  0011  009E               	movwf	??_interrupt_handle
  2125  0012  0807               	movf	7,w
  2126  0013  0090               	movwf	_itemp
  2127  0014  080A               	movf	10,w
  2128  0015  009F               	movwf	??_interrupt_handle+1
  2129  0016  2945               	ljmp	_interrupt_handle


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0_4          14      6       9
    BANK0            47      0      13

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _interrupt_handle in COMMON

    None.

Critical Paths under _main in BANK0_4

    _main->_delay_ms
    _bt_off->_delay_ms

Critical Paths under _interrupt_handle in BANK0_4

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_handle in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     266
                         _CheckSleep
                   _CountdownDisplay
                           _InitPort
                            _InitRam
                         _InitSystem
                         _LedDisplay
                        _MotoDisplay
                            _ScanKey
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _ScanKey                                              0     0      0       0
                          _LedSwitch
                         _MotoSwitch
                             _PowOff
                              _PowOn
 ---------------------------------------------------------------------------------
 (2) _PowOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PowOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotoSwitch                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedSwitch                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MotoDisplay                                          0     0      0       0
                            _MotoOff
                             _MotoOn
 ---------------------------------------------------------------------------------
 (2) _MotoOn                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotoOff                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LedDisplay                                           0     0      0       0
                             _LedOff
                              _LedOn
 ---------------------------------------------------------------------------------
 (2) _LedOn                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LedOff                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitSystem                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitRam                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CountdownDisplay                                     0     0      0     133
                             _bt_off
 ---------------------------------------------------------------------------------
 (2) _bt_off                                               0     0      0     133
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     133
                                              2 BANK0_4    4     2      2
 ---------------------------------------------------------------------------------
 (1) _CheckSleep                                           0     0      0       0
                           _InitPort
 ---------------------------------------------------------------------------------
 (1) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_handle                                     2     2      0       0
                                              0 BANK0_4    2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckSleep
     _InitPort
   _CountdownDisplay
     _bt_off
       _delay_ms
   _InitPort
   _InitRam
   _InitSystem
   _LedDisplay
     _LedOff
     _LedOn
   _MotoDisplay
     _MotoOff
     _MotoOn
   _ScanKey
     _LedSwitch
     _MotoSwitch
     _PowOff
     _PowOn
   _delay_ms

 _interrupt_handle (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0      16       3        0.0%
BITBANK0_4           E      0       0       4        0.0%
BANK0_4              E      6       9       5       64.3%
BITBANK0            2F      0       0       6        0.0%
BANK0               2F      0       D       7       27.7%
ABS                  0      0      16       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Sep 05 15:41:54 2025

                        L1 0040                          L2 0170                          L3 017A  
                       _S0 0298                         _S1 0299                         _T0 0001  
                       _S2 029A                         _T1 004D                         _S3 029B  
                       _S4 029C                         _S5 029D                         _S6 029E  
                       _S7 029F                         _S8 02A0                         _S9 02A1  
                      _GIE 0077                        _BOR 02CE                        _BUZ 0265  
                      _PS0 0208                        _PS1 0209                        _PS2 020A  
                      _SCS 0280                        _PSA 020B                        u783 00DA  
                      _POR 02CF                 _CheckSleep 007F                       l2177 00E5  
                     l5010 0050                       l5040 0070                       l5024 005E  
                     l5050 007C                       l5034 0067                       l5018 0057  
                     l1762 001F                       l5060 00DC                       l5044 0073  
                     l1764 0041                       l1765 0039                       l1767 003D  
                     l2904 00F6                       l5082 00FE                       l5092 0109  
                     l2908 0106                       l4720 01A5                       l4722 01A8  
                     l4724 019F                       l4654 0131                       l4726 01A2  
                     l4840 019A                       l2897 013C                       l4658 0129  
                     l4834 019E                       l4864 008F                       l4858 0084  
                     l4964 0186                       l4966 0193                       l4984 0028  
                     l4988 002D                       _T0CK 025F                       _T0IE 0070  
                     _T0IF 0078                       _T0CR 004B                       _T0CS 020D  
                     _T1IE 0259                       _T1IF 0258                       _T1EN 0267  
                     _PDB3 0293                       _PDB4 0294                       _PDB5 0295  
                     _PDB6 0296                       _T0SE 020C                       _PDB7 0297  
                     _IOCB 0009                       _AUXR 0059                       _PBIE 0071  
                     _PBIF 0079                       _PCON 0008                       _HXEN 0281  
                     _RAMP 0055                       _LVDM 028C                       _TMPF 007C  
         _CountdownDisplay 00C3                       _main 00EA                       btemp 006E  
                     start 0017            __end_of_InitRam 0193            __end_of_ScanKey 007F  
               _LedDisplay 019B            __end_of_MotoOff 01A5   __end_of_interrupt_handle 015C  
                    ?_main 001E                      _T1CK0 0263                      _T1CK1 0264  
                    _CMPIE 028A                      _CMPEN 0040                      _CMPCR 0051  
                    _CMPOF 0045                      _T1CON 004C                      _CMPWK 028B  
                    _CPPIS 0288                      _T1PR0 0260                      _T1PR1 0261  
                    _T1PR2 0262                      _ODCON 000C                      _PDCON 000B  
                    _PHCON 000D                      _PWM0E 0266                      _PWM1E 0241  
                    _PWM2E 0240                      _SLOP0 02A8                      _PWM0P 004F  
                    _SLOP1 02A9                      _SLOP2 02AA                      _PWM1P 0049  
                    _PWM2P 004A                      _PORTB 0006                      _WDTEN 0047  
                    _PWMCK 0244                      _PWMCT 02C8                      _PWMMD 0243  
                    _TRISB 0046                      _LedOn 01A5                      _PowOn 0186  
                    _itemp 0010                      wtemp0 006E            __initialization 0018  
             __end_of_main 010B                 _InitSystem 017C           __end_of_InitPort 0129  
                   ??_main 0000                     ?_LedOn 0000                     ?_PowOn 0000  
       __size_of_LedSwitch 000A              ??_MotoDisplay 0000                ?_CheckSleep 0000  
                   _CMPIES 0289                     _T1LOAD 004E                     i1l1399 0153  
                   _PDCON1 0052                     i1l4930 014C                     _INTEDG 020E  
                   _MODSEL 02AF                     _OSCCON 0050                     _TEMPEN 02A6  
                   _PWM0OE 0247                     _PWM3CT 02C9                     _PWM1OE 0246  
                   _PWM2OE 0245                     _PORTB0 0030                     _PORTB1 0031  
                   _PORTB2 0032                     _PORTB3 0033                     _PORTB4 0034  
                   _PORTB5 0035                     _OPTION 0041                     _PWMCON 0048  
                   _TRISB0 0230                     _TRISB1 0231                     _TRISB2 0232  
                   _TRISB3 0233                     _TRISB4 0234                     _TRISB5 0235  
                   _TRISB6 0236                     _PWMINV 0242                     _TRISB7 0237  
                ??_InitRam 0000                     _LedOff 01A8           __end_of_delay_ms 0145  
                ??_ScanKey 0000                 _SleepCount 0017                 _MotoSwitch 0168  
                ??_MotoOff 0000                     _MotoOn 019F                     _PowOff 0193  
                   _bt_off 015C                ?_LedDisplay 001E                     _long_f 001A  
                   saved_w 006E               __pbssBANK0_4 0024    __end_of__initialization 0018  
      __end_of_MotoDisplay 019B              __end_of_LedOn 01A8             __pcstackCOMMON 0000  
        __end_of_LedSwitch 017C              __end_of_PowOn 018D                ?_InitSystem 001E  
      __size_of_CheckSleep 0044   __end_of_CountdownDisplay 00EA                    ??_LedOn 0000  
                  ??_PowOn 0000                 __pbssBANK0 0011        __size_of_LedDisplay 0004  
                ?_InitPort 001E                  SAVE_BANK1 000C                    ?_LedOff 0000  
              ?_MotoSwitch 0000                    ?_MotoOn 001E                    ?_PowOff 0000  
               __pmaintext 00EA                 __pintentry 0008                    ?_bt_off 001E  
       _g_ucTimer10msCount 001D                    _CHARGE0 0053                    _CHARGE1 0054  
                  _CHARGEN 02A7          ?_interrupt_handle 001E         ??_interrupt_handle 001E  
                  _T0OSCEN 0287                    _HIRCTRM 005B                    _INTECON 000E  
                  _INTFLAG 000F                  ?_delay_ms 0020                    _RCTRMEN 02CA  
              _MotoDisplay 0197    _flag_is_blue_tooth_open 0025        __size_of_InitSystem 000A  
               ??_InitPort 0000                    _InitRam 018D                    _ScanKey 001A  
          __size_of_LedOff 0003                    _MotoOff 01A2            __size_of_MotoOn 0003  
          __size_of_PowOff 0004            __size_of_bt_off 000C                    __ptext0 0000  
                  __ptext1 001A                    __ptext2 0186                    __ptext3 0193  
                  __ptext4 0168                    __ptext5 0172                    __ptext6 0197  
                  __ptext7 019F                    __ptext8 01A2                    __ptext9 019B  
                  _occupy1 0042                    _occupy2 0047                    _occupy3 005A  
               ??_delay_ms 0000        __size_of_MotoSwitch 000A               ??_CheckSleep 0000  
     end_of_initialization 0018               ??_LedDisplay 0000         __end_of_CheckSleep 00C3  
       __end_of_LedDisplay 019F            __pcstackBANK0_4 001E             __end_of_LedOff 01AB  
           __end_of_MotoOn 01A2             __end_of_PowOff 0197               ??_InitSystem 0000  
                _LedSwitch 0172             __end_of_bt_off 0168          ?_CountdownDisplay 001E  
       ??_CountdownDisplay 0000        start_initialization 0018         __end_of_InitSystem 0186  
            EXIT_BANK_SAVE 000F                   ??_LedOff 0000          __size_of_InitPort 001E  
             ??_MotoSwitch 0000                   ??_MotoOn 0000                   ??_PowOff 0000  
            _longpress_cnt 0015                   ??_bt_off 0000                 ?_LedSwitch 0000  
                ___latbits 0000              __pcstackBANK0 0000         __end_of_MotoSwitch 0172  
             ?_MotoDisplay 001E         _g_ucTimerWorkCount 001C          __size_of_delay_ms 001C  
__size_of_interrupt_handle 0017                   ?_InitRam 001E                   ?_ScanKey 001E  
                 ?_MotoOff 001E        _flag_is_device_open 0024             __size_of_LedOn 0003  
           __size_of_PowOn 0007                _clink_event 001B          interrupt_function 0008  
                delay_ms@i 0022                   _SINK_SEL 02AE                ??_LedSwitch 0000  
                 _InitPort 010B           __size_of_InitRam 0006           __size_of_ScanKey 0065  
         __size_of_MotoOff 0003                 _BITS_DATA0 0026                   _delay_ms 0129  
                 __ptext10 01A5                   __ptext11 01A8                   __ptext12 017C  
                 __ptext13 018D                   __ptext14 00C3                   __ptext15 015C  
                 __ptext16 0129                   __ptext17 007F                   __ptext18 010B  
                 __ptext19 0145           _interrupt_handle 0145       __size_of_MotoDisplay 0004  
                 _holdOn_f 0019  __size_of_CountdownDisplay 0027              __size_of_main 0021  
              delay_ms@xms 0020                   intlevel1 0000              _power_off_cnt 0011  
